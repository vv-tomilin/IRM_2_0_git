<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="1000" height="1000" xmlns="http://www.w3.org/2000/svg" version="1.2" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:gridconfig gridstyle="lines" width="20" height="20" enabled="false"/>
  <atv:snapconfig width="10" height="10" enabled="false"/>
 </metadata>
 <foreignObject id="map" width="1000" x="0" requiredExtensions="http://www.w3.org/1999/xhtml" height="1000" y="0"/>
 <script type="text/ecmascript"><![CDATA[/* 

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    crossorigin=""/>
    
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://unpkg.com/osme"></script>

*/

var L = top.L
var osme = top.osme
var mapContainer = document.getElementById("map")

webMI.addOnload(function (e) {
  var map = L.map(mapContainer, {
    zoomAnimation: false,
    closePopupOnClick: false,
    minZoom: 4,
  }).setView([61.0199488, 69.0343463], 4)

  L.tileLayer(
//	"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=mnbrDjV0TfZVtD4BIZJ8",
    "https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=k4CabxprT9lkNkbwewAQ",
//    "https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=09skNtN2cnzqmCJcN1CT",
    {
      attribution: " <a>© Rigintel</a>",
    }
  ).addTo(map)

  // ICONS
  var rigIcon_ON = L.icon({
    iconUrl: "de/map_images/drilling-rig.svg",
    iconSize: [52, 52],
  })
  var rigIcon_OFF = L.icon({
    iconUrl: "de/map_images/drilling-rig-black.svg",
    iconSize: [52, 52],
  })
  var rigIcon_MAINTENANCE = L.icon({
    iconUrl: "de/map_images/drilling-rig-blue.svg",
    iconSize: [52, 52],
  })
  // LAYERS
  var regionLayer = L.featureGroup([]).addTo(map)
  var oilfieldLayer = L.featureGroup([]).addTo(map)
  var wellPadLayer = L.featureGroup([]).addTo(map)
  var rigLayer = L.featureGroup([]).addTo(map)

  map.on("zoomend", function (e) {
    if (map.getZoom() < 4.5) {
      changeHeaderState("КАРТА")
      regionLayer.eachLayer(function (layer) {
        layer.mark.openPopup()
      })
      oilfieldLayer.clearLayers()
      wellPadLayer.clearLayers()
      rigLayer.clearLayers()
    }
  })

  var regions = []

  var data = [
    {
      osmId: "140296",
      options: {
        fillOpacity: 0,
        color: "#F00",
        opacity: 1,
      },
      attachedDisplay:
        "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО",
      oilfields: [
        {
          osmId: "1761431",
          options: {
            fillOpacity: 0,
            color: "#1aa6b7",
            weight: 4,
          },
          title: "<h2>Приобское</h2>",
          attachedDisplay:
            "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Приобское",
          wellPads: [
            {
              name: "Кустовая площадка Б-1",
              coords: { lat: 62.132161499999995, lng: 65.52080849999999 },
              radius: 500,
              attachedDisplay:
                "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Приобское.Кустовые площадки.Кустовая площадка Б-1",
              rigs: [
                {
                  name: "Скважина Б-1-1",
                  coords: { lat: 62.132161499999995, lng: 65.52080849999999 },
                  status: "ПРОБУРЕННАЯ",
                  attachedDisplay:
                    "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Приобское.Кустовые площадки.Кустовая площадка Б-1.Скважина Б-1-1",
                },
                {
                  name: "Скважина Б-1-2",
                  coords: { lat: 62.13316149999999, lng: 65.52180849999999 },
                  status: "ВМР",
                  attachedDisplay:
                    "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Приобское.Кустовые площадки.Кустовая площадка Б-1.Скважина Б-1-2",
                },
              ],
            },
          ],
        },
        {
          osmId: "1761430",
          options: {
            fillOpacity: 0,
            color: "#1aa6b7",
            weight: 4,
          },
          title: "<h2>Орехово-Ермаковское</h2>",
          attachedDisplay:
            "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Орехово-Ермаковское",
          wellPads: [
            {
              name: "Кустовая площадка А-2",
              coords: { lat: 60.9149, lng: 76.5512 },
              radius: 500,
              attachedDisplay:
                "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Орехово-Ермаковское.Кустовые площадки.Кустовая площадка А-2",
              rigs: [
                {
                  name: "Скважина А-2-1",
                  coords: { lat: 60.914963, lng: 76.551299 },
                  status: "БУРЕНИЕ",
                  attachedDisplay:
                    "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Орехово-Ермаковское.Кустовые площадки.Кустовая площадка А-2.Скважина А-2-1",
                },
                {
                  name: "Скважина А-2-2",
                  coords: { lat: 60.915962999999996, lng: 76.552299 },
                  status: "БУРЕНИЕ",
                  attachedDisplay:
                    "AGENT.DISPLAYS.Platforma.IR-manager.Регион.Ханты-Мансийский АО.Месторождения.Орехово-Ермаковское.Кустовые площадки.Кустовая площадка А-2.Скважина А-2-2",
                },
              ],
            },
          ],
        },
      ],
    },
  ]

  data.forEach(function (region) {
    attachDataToMap(region)
  })

  function attachDataToMap(props) {
    osme.geoJSON(
      props.osmId,
      {
        lang: "RU",
        quality: 0,
      },
      function (data) {
        var converted = osme.toLeaflet(data)
        var shortcut = converted.geoJSON.features[0]
        var region = L.geoJSON(shortcut.geometry, props.options)
        region.searchId = props.osmId
        region.oilfields = []
        props.oilfields.forEach(function (oilfield) {
          osme.geoJSON(
            oilfield.osmId,
            {
              lang: "RU",
              quality: 0,
            },
            function (data) {
              var converted = osme.toLeaflet(data)
              var shortcut = converted.geoJSON.features[0]
              var oilfield_poligon = L.geoJSON(
                shortcut.geometry,
                oilfield.options
              )
              oilfield_poligon.searchId = oilfield.osmId
              oilfield_poligon.wellpads = []
              oilfield_poligon.addEventListener("click", function (event) {
                stateToOilfield(
                  oilfield_poligon,
                  true,
                  oilfield.attachedDisplay
                )
              })

              oilfield.wellPads.forEach(function (wellpad) {
                var wellpad_poligon = L.circle(
                  [wellpad.coords.lat, wellpad.coords.lng],
                  {
                    radius: wellpad.radius,
                    fillOpacity: 0,
                  }
                )
                wellpad_poligon.name = wellpad.name
                wellpad_poligon.rigs = []
                if (wellpad.name) {
                  wellpad_poligon.bindTooltip("<h3>" + wellpad.name + "</h3>", {
                    permanent: true,
                    direction: "top",
                    offset: L.point(0, -10),
                  })
                }
                wellpad_poligon.addEventListener("click", function (event) {
                  stateToWellpad(wellpad_poligon, true, wellpad.attachedDisplay)
                })

                wellpad.rigs.forEach(function (rig) {
                  var rig_marker = L.marker([rig.coords.lat, rig.coords.lng], {
                    title: rig.name,
                  })
                  rig_marker.name = rig.name
                  rig_marker.setIcon(
                    (function () {
                      switch (rig.status) {
                        case "БУРЕНИЕ":
                          return rigIcon_ON
                        case "ПРОБУРЕННАЯ":
                          return rigIcon_OFF
                        case "ВМР":
                          return rigIcon_MAINTENANCE
                        default:
                          return rigIcon_OFF
                      }
                    })()
                  )
                  rig_marker.status = rig.status
                  rig_marker.bindPopup(rig.name, { closeButton: false })
                  rig_marker.addEventListener("click", function (e) {
                    changeHeaderState("ДЕТАЛИЗАЦИЯ")
                    openDisplayEventHandler(rig.attachedDisplay, "Tree_content_renderFrame")
                    openDisplayEventHandler("AGENT.DISPLAYS.Video_param","mapframe")
                  })
                  wellpad_poligon.rigs.push(rig_marker)
                })

                oilfield_poligon.wellpads.push(wellpad_poligon)
              })

              if (oilfield.title) {
                oilfield_poligon.bindTooltip(oilfield.title, {
                  permanent: true,
                  direction: "top",
                  offset: L.point(0, -10),
                })
              }

              region.oilfields.push(oilfield_poligon)
            }
          )
        })

        region.addEventListener("click", function (event) {
          stateToRegion(region, true, props.attachedDisplay)
        })

        region.mark = L.marker(region.getBounds().getCenter(), {
          opacity: 0,
        })
          .bindPopup(
            "<h1 style='text-align: center'>" +
              shortcut.properties.title +
              "</h1>",
            {
              closeOnClick: false,
              closeButton: false,
            }
          )
          .addTo(map)
        region.mark.openPopup()
        regionLayer.addLayer(region)
        regions.push(region)
      }
    )
  }

  function changeHeaderState(state) {
    webMI.trigger.fire("changeCurrentLevel", state)
  }
  function openDisplayEventHandler(display, frame) {
    webMI.display.openDisplay(display, {}, frame)
  }

  function stateToRegion(region, notTriggerEvent, attachedDisplay) {
    changeHeaderState("РЕГИОН")
    wellPadLayer.clearLayers()
    rigLayer.clearLayers()
    region.oilfields.forEach(function (oilfield) {
      oilfieldLayer.addLayer(oilfield)
    })
    oilfieldLayer.eachLayer(function (layer) {
      layer.openTooltip()
    })
    map.fitBounds(region.getBounds())
    region.mark.closePopup()
    if (notTriggerEvent) {
      openDisplayEventHandler(attachedDisplay, "Tree_content_renderFrame")
    }
  }

  function stateToOilfield(oilfield, notTriggerEvent, attachedDisplay) {
    changeHeaderState("МЕСТОРОЖДЕНИЕ")
    rigLayer.clearLayers()
    map.fitBounds(oilfield.getBounds())
    oilfield.closeTooltip()
    if (notTriggerEvent) openDisplayEventHandler(attachedDisplay, "Tree_content_renderFrame")
    oilfield.wellpads.forEach(function (wellpad) {
      wellPadLayer.addLayer(wellpad)
    })
  }

  function stateToWellpad(wellpad, notTriggerEvent, attachedDisplay) {
  changeHeaderState("КУСТОВАЯ ПЛОЩАДКА")
    wellpad.closeTooltip()
    if (notTriggerEvent) {
      openDisplayEventHandler(attachedDisplay, "Tree_content_renderFrame")
    }
    map.setView(wellpad.getLatLng(), 16)
    wellpad.rigs.forEach(function (rig) {
      rigLayer.addLayer(rig)
    })
  }

  // TRIGGERS

  webMI.trigger.connect("zoomToRegion", function (e) {
    var target = regions.filter(function (region) {
      return region.searchId == e.value.target
    })[0]
    stateToRegion(target)
  })

  webMI.trigger.connect("zoomToOilfield", function (e) {
    wellPadLayer.clearLayers()
    var parent = regions.filter(function (region) {
      return region.searchId == e.value.parent
    })[0]
    parent.oilfields.forEach(function (oilfield) {
      oilfieldLayer.addLayer(oilfield)
    })
    var target = parent.oilfields.filter(function (oilfield) {
      return oilfield.searchId == e.value.target
    })[0]
    stateToOilfield(target)
  })

  webMI.trigger.connect("zoomToWellpad", function (e) {
    var parent = regions.filter(function (region) {
      return region.searchId == e.value.parent
    })[0]
    parent.oilfields.forEach(function (oilfield) {
      oilfieldLayer.addLayer(oilfield)
    })
    var subparent = parent.oilfields.filter(function (oilfield) {
      return oilfield.searchId == e.value.subparent
    })[0]
    subparent.wellpads.forEach(function (wellpad) {
      wellPadLayer.addLayer(wellpad)
    })
    var target = subparent.wellpads.filter(function (wellpad) {
      return wellpad.name == e.value.target
    })[0]
    stateToWellpad(target)
  })
  webMI.trigger.connect("zoomToRig", function (e) {
    var parent = regions.filter(function (region) {
      return region.searchId == e.value.parent
    })[0]
    parent.oilfields.forEach(function (oilfield) {
      oilfieldLayer.addLayer(oilfield)
    })
    var subparent = parent.oilfields.filter(function (oilfield) {
      return oilfield.searchId == e.value.subparent
    })[0]
    subparent.wellpads.forEach(function (wellpad) {
      wellPadLayer.addLayer(wellpad)
    })
    var target = subparent.wellpads.filter(function (wellpad) {
      return wellpad.name == e.value.target
    })[0]
    var rig = target.rigs.filter(function (rig) {
      return rig.name == e.value.name
    })[0]
    stateToWellpad(target)
    rig.openPopup()
    changeHeaderState("ДЕТАЛИЗАЦИЯ")
  })

  webMI.trigger.connect("filterQuery", function (e) {
    var filterResult = []
    regions.forEach(function (region) {
      region.oilfields.forEach(function (oilfield) {
        oilfield.wellpads.forEach(function (wellpad) {
          wellpad.rigs.forEach(function (rig) {
            if (rig.status === e.value.filter) {
              filterResult.push(rig)
            }
          })
        })
      })
    })
    rigLayer.clearLayers()
    filterResult.forEach(function (result) {
      rigLayer.addLayer(result)
    })
  })

  // end preload
})
]]></script>
</svg>
