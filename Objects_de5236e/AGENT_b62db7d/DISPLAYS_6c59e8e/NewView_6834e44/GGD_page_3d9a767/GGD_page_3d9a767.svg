<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="1015" version="1.2" width="1850" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <rect atv:refpx="925" atv:refpy="507.5" fill="#1f1f1f" height="1015" id="id_43" stroke="#0000ff" stroke-width="0" width="1850" x="0" y="0"/>
 <foreignObject height="610" id="id_0" width="1491" x="353.305" y="0">
  <div id="hcontainer" style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml">
   <script src="../../highcharts/highcharts.js"/>
   <script src="../../highcharts/series-label.js"/>
   <script src="../../highcharts/accessibility.js"/>
   <figure class="highcharts-figure" style="position:absolute; top:0px; margin-top:0px; width:1300px; height:100%">
    <div id="GGD_container" style="padding:0px; margin:0px;"/>
   </figure>
  </div>
 </foreignObject>
 <rect atv:refpx="1702.163" atv:refpy="804.704" fill="#333333" height="376.935" id="id_2" stroke="#000000" stroke-width="2" width="187.116" x="1608.606" y="616.237"/>
 <rect atv:refpx="1709.569" atv:refpy="523.266" fill="#ffffff" height="30" id="id_3" stroke="#000000" stroke-width="0" width="165" x="1619.07" y="653.266"/>
 <text atv:refpx="1705.397" atv:refpy="668.136" fill="#000000" font-family="Arial" font-size="12" id="id_4" x="1674.897" y="672.636">00.00.0000</text>
 <text atv:refpx="1705.5" atv:refpy="629.967" fill="#ffffff" font-family="Arial" font-size="12" id="id_5" x="1664.5" y="634.467">Дата открытия</text>
 <text atv:refpx="1705.5" atv:refpy="641.205" fill="#ffffff" font-family="Arial" font-size="12" id="id_6" text-anchor="middle" x="1705.5" y="645.705">скважины</text>
 <rect atv:refpx="1698.549" atv:refpy="608.484" fill="#ffffff" height="30" id="id_7" stroke="#000000" stroke-width="0" width="165" x="1619.05" y="706.484"/>
 <text atv:refpx="1705.377" atv:refpy="721.354" fill="#000000" font-family="Arial" font-size="12" id="id_8" text-anchor="middle" x="1705.377" y="725.854">00.00.0000</text>
 <text atv:refpx="1705.48" atv:refpy="694.423" fill="#ffffff" font-family="Arial" font-size="12" id="id_9" text-anchor="middle" x="1705.48" y="698.923">Плановая длительность</text>
 <rect atv:refpx="1686.195" atv:refpy="618.883" fill="#ffffff" height="30" id="id_11" stroke="#000000" stroke-width="0" width="165" x="1619.696" y="759.883"/>
 <text atv:refpx="1706.023" atv:refpy="774.753" fill="#000000" font-family="Arial" font-size="12" id="id_12" text-anchor="middle" x="1706.023" y="779.253">00.00.0000</text>
 <text atv:refpx="1702.126" atv:refpy="747.822" fill="#ffffff" font-family="Arial" font-size="12" id="id_13" text-anchor="middle" x="1702.126" y="752.322">Фактическая длительность</text>
 <rect atv:refpx="1709.964" atv:refpy="789.735" fill="#ffffff" height="30" id="id_14" stroke="#000000" stroke-width="0" width="165" x="1619.465" y="824.735"/>
 <text atv:refpx="1705.792" atv:refpy="839.605" fill="#000000" font-family="Arial" font-size="12" id="id_15" text-anchor="middle" x="1705.792" y="844.105">00.00.0000</text>
 <text atv:refpx="1705.895" atv:refpy="801.436" fill="#ffffff" font-family="Arial" font-size="12" id="id_16" text-anchor="middle" x="1705.895" y="805.936">Глубина забоя</text>
 <text atv:refpx="1705.895" atv:refpy="812.674" fill="#ffffff" font-family="Arial" font-size="12" id="id_17" text-anchor="middle" x="1705.895" y="817.174">плановая (м)</text>
 <rect atv:refpx="1709.85" atv:refpy="872.075" fill="#ffffff" height="30" id="id_18" stroke="#000000" stroke-width="0" width="165" x="1619.351" y="889.075"/>
 <text atv:refpx="1705.678" atv:refpy="903.945" fill="#000000" font-family="Arial" font-size="12" id="id_19" text-anchor="middle" x="1705.678" y="908.445">00.00.0000</text>
 <text atv:refpx="1705.781" atv:refpy="865.776" fill="#ffffff" font-family="Arial" font-size="12" id="id_20" text-anchor="middle" x="1705.781" y="870.276">Глубина забоя</text>
 <text atv:refpx="1705.781" atv:refpy="877.014" fill="#ffffff" font-family="Arial" font-size="12" id="id_21" text-anchor="middle" x="1705.781" y="881.514">фактическая (м)</text>
 <rect atv:refpx="1649.311" atv:refpy="888.151" fill="#ffffff" height="30" id="id_22" stroke="#000000" stroke-width="0" width="165" x="1618.812" y="953.151"/>
 <text atv:refpx="1705.139" atv:refpy="968.021" fill="#000000" font-family="Arial" font-size="12" id="id_23" text-anchor="middle" x="1705.139" y="972.521">00.00.0000</text>
 <text atv:refpx="1705.242" atv:refpy="929.852" fill="#ffffff" font-family="Arial" font-size="12" id="id_24" text-anchor="middle" x="1705.242" y="934.352">Глубина</text>
 <text atv:refpx="1705.242" atv:refpy="941.09" fill="#ffffff" font-family="Arial" font-size="12" id="id_25" text-anchor="middle" x="1705.242" y="945.59">инструмента (м)</text>
 <foreignObject height="700" id="id_10" width="400" x="0" y="0">
  <div style="width:100%;height:100%;" xmlns="http://www.w3.org/1999/xhtml">
   <script src="../../highcharts/xrange.js"/>
   <div id="operations_container"/>
  </div>
 </foreignObject>
 <foreignObject height="301.737" id="id_26" width="457.536" x="2.817" y="710.33">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml">
   <style>
.switch_pie{
	width:90%;
	border:0px;	
	background-color:#333333;
	color:#26d62b
}
.switch_pie:hover{	
	background-color:#000;
}
</style>
   <button class="switch_pie" id="switchPieChart">График/список</button>
   <figure class="higcharts-figure" id="pie_figure" style="margin-top:0px;margin-left:0px;display:none">
    <div id="pie_container"/>
   </figure>
   <div id="oper_legend">
    <table id="oper_table" style="color:white; font-family:Arial; text-align:left; border-spacing:1.5px">
     <tr>
      <td style="width:259px;margin-right:7px; text-align:center;">ОПЕРАЦИЯ</td>
      <td style="width:125px; text-align:center;">ВРЕМЯ (%)</td>
     </tr>
     <br/>
    </table>
   </div>
  </div>
 </foreignObject>
 <rect atv:refpx="131.317" atv:refpy="855.434" fill="#333333" height="250" id="id_27" stroke="#000000" stroke-width="3" width="253" x="4.817" y="731.33"/>
 <rect atv:refpx="331.312" atv:refpy="856.33" fill="#333333" height="250" id="id_28" stroke="#000000" stroke-width="3" width="125" x="268.812" y="731.33"/>
 <rect atv:refpx="1024.979" atv:refpy="753.639" fill="#000000" height="60" id="id_41" stroke="#0000ff" stroke-width="0" width="1086.22" x="475.869" y="756.639"/>
 <foreignObject height="50" id="id_29" width="1078" x="480" y="761.272">
  <div id="advance_container" style="width:100%;height:100%; background-color:red" xmlns="http://www.w3.org/1999/xhtml">
   <figure class="highcharts-figure" style="margin:0">
    <div id="gotta_go_fast_container"/>
   </figure>
  </div>
 </foreignObject>
 <text atv:refpx="571.192" atv:refpy="744.015" fill="#ffffff" font-family="Arial" font-size="16" id="id_32" x="488.692" y="748.515">Отклонение   от  нормы   (часы)</text>
 <rect atv:refpx="755.589" atv:refpy="674.505" fill="#333333" height="24.13" id="id_33" stroke="#0000ff" stroke-width="0" width="84.283" x="713.447" y="730.44"/>
 <text atv:refpx="755.908" atv:refpy="742.848" fill="#ffff00" font-family="Arial" font-size="16" font-weight="bold" id="id_34" text-anchor="middle" x="755.908" y="748.848">000</text>
 <text atv:refpx="567.631" atv:refpy="927.223" fill="#ffffff" font-family="Arial" font-size="16" id="id_1" x="487.937" y="931.723">Показатель эффективности</text>
 <rect atv:refpx="754.834" atv:refpy="918.713" fill="#333333" height="24.13" id="id_30" stroke="#0000ff" stroke-width="0" width="84.283" x="712.692" y="913.648"/>
 <text atv:refpx="755.153" atv:refpy="926.056" fill="#ffff00" font-family="Arial" font-size="16" font-weight="bold" id="id_31" text-anchor="middle" x="755.153" y="932.056">000</text>
 <rect atv:refpx="1019.11" atv:refpy="962.792" fill="#000000" height="60" id="id_36" stroke="#0000ff" stroke-width="0" width="1086.22" x="476" y="939.792"/>
 <text atv:refpx="539.165" atv:refpy="834.057" fill="#ffffff" font-family="Arial" font-size="16" id="id_37" x="487.937" y="838.557">НПВ (часы), итого</text>
 <rect atv:refpx="754.834" atv:refpy="813.547" fill="#333333" height="24.13" id="id_38" stroke="#0000ff" stroke-width="0" width="84.283" x="712.692" y="820.482"/>
 <text atv:refpx="755.153" atv:refpy="832.89" fill="#ffffff" font-family="Arial" font-size="16" font-weight="bold" id="id_39" text-anchor="middle" x="755.153" y="838.89">000</text>
 <rect atv:refpx="1019.11" atv:refpy="857.626" fill="#000000" height="60" id="id_40" stroke="#0000ff" stroke-width="0" width="1086.22" x="476" y="846.626"/>
 <foreignObject height="129.204" id="id_42" width="857.855" x="637.096" y="574.404">
  <div style="color:white; font-family: Arial; width:100%;height:100%;justify-content:space-around;display:flex" xmlns="http://www.w3.org/1999/xhtml">
   <div style="height:100%; display:flex; flex-direction:column; justify-content:center">
    <div style="display:flex; align-items:center; justify-content:space-around">
     <img id="db" src="../../GGD_page/button_yellow.png" style="padding-right: 10px; padding-left:20px"/>
     <div style="font-size:1.3rem;">ПОЛОЖЕНИЕ ДОЛОТА</div>
    </div>
    <div style="font-size:0.7rem">ВКЛ/ВЫКЛ</div>
   </div>
   <div style="height:100%; display:flex; flex-direction:column; justify-content:center">
    <div style="display:flex; align-items:center; justify-content:space-around">
     <img id="pb" src="../../GGD_page/button_white.png" style="padding-right: 10px; padding-left:20px"/>
     <div style="font-size:1.3rem;">ПО ПРОЕКТУ</div>
    </div>
    <div style="font-size:0.7rem">ВКЛ/ВЫКЛ</div>
   </div>
   <div style="height:100%; display:flex; flex-direction:column; justify-content:center">
    <div style="display:flex; align-items:center; justify-content:space-around">
     <img id="fb" src="../../GGD_page/button_red.png" style="padding-right: 10px; padding-left:20px"/>
     <div style="font-size:1.3rem;">ФАКТИЧЕСКИ</div>
    </div>
    <div style="font-size:0.7rem">ВКЛ/ВЫКЛ</div>
   </div>
  </div>
 </foreignObject>
 <svg atv:refpx="1726.202" atv:refpy="300.099" height="534" id="id_44" width="150" x="1651.202" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.RigConstruction.Insides" y="39.099"/>
 <foreignObject height="50" id="id_35" width="1078" x="480" y="944.533">
  <div id="id_45" style="width:100%;height:100%; background-color:red" xmlns="http://www.w3.org/1999/xhtml">
   <figure class="highcharts-figure" style="margin:0">
    <div id="Effecivity_container"/>
   </figure>
  </div>
 </foreignObject>
 <foreignObject height="50" id="id_47" width="1078" x="480" y="851.184">
  <div id="id_48" style="width:100%;height:100%; background-color:red" xmlns="http://www.w3.org/1999/xhtml">
   <figure class="highcharts-figure" style="margin:0">
    <div id="NPV_container"/>
   </figure>
  </div>
 </foreignObject>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[var demo=true;
var GGD_chart = Highcharts.chart(document.getElementById('GGD_container'), {
    labels: {
        useHTML: Highcharts.hasBidiBug
    },
    chart: {
      type: 'line',
      backgroundColor:'rgba(0,0,0,0)',
      width:1220,
      height:610,
      plotBackgroundColor:'#101010',
      styledMode:false
    },
    title: {
      text: 'ГРАФИК: ГЛУБИНА/ДЕНЬ',
      margin:0,
      style:{
          color:'#fff'
      }
    },
    xAxis: {
      type: 'linear',
      min: 0,
      title: {
        text: 'ПРОДОЛЖИТЕЛЬНОСТЬ БУРЕНИЯ (СУТ)',
        margin:0,
        style:{
            color:'#fff',
            fontSize:'18px'
        },
        enabled:false
      },
      gridLineWidth:'1px',
      gridLineColor:'#6e6f70',
      tickInterval:5,
      minorTickInterval:1
    },
    yAxis: [{
      title: {
        text: 'ГЛУБИНА ПО СТВОЛУ (М)',
        style:{
            color:'#fff',
            fontSize:'18px'
        }
      },
      reversed:true,
      min: 0,
      gridLineColor:'#6e6f70'
    },
    {
		title:{
			enabled:false
		},
		reversed:true,
		min: 0,
		opposite: true,
		gridLineColor:'#6e6f70'
    }],
    tooltip: {
      /*headerFormat: '<b>{series.name}</b><br>',
      pointFormat: '{point.x:%e. %b}: {point.y:.2f} m {point.name}'*/
      formatter: function(){
		var str="<b>"+this.series.name+"</b><br>"
		var buf=this.point.name.split(";")
		str=str+"Дата/Время: "
		var f = new Date()
		f.setTime(buf[0])
		//console.log(f)
		var fd=f.getHours()
		if(fd<10){fd="0"+fd}
		str=str+fd+":"
		fd=f.getMinutes()
		if(fd<10){fd="0"+fd}
		str=str+fd+" "
		
		fd=f.getDate()
		if(fd<10){fd="0"+fd}
		str=str+fd+"."
		
		fd=f.getMonth()+1
		if(fd<10){fd="0"+fd}
		str=str+fd+"."
		
		fd=f.getFullYear()
		str=str+fd+"<br>"
		
		str=str+"<b>Забой:</b> "
		str=str+this.y
		if(buf[1]!=""){
			str=str+"<br><b>Операция: </b>"
			str=str+buf[1]
		}
		return str
		//return console.log(this.point.name)     
      }
    },
    legend:{
        enabled:false
    },
  
    plotOptions: {
      series: {
        marker: {
          enabled: false
        },
        label:{
            enabled:false
        }

      }
    },
    credits: {
        enabled: false
    },
  
    colors: ['#FFF', '#F00', '#FF0'],
    series: [{
      name: "План",
      data: []
    }, {
      name: "Факт",
      data: []
    }, {
      name: "Положение долота",
      data: []
    }]
  });
  
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  

var planVis=true;
var factVis=true;
var drillVis=true;
  
 
document.getElementById("pb").addEventListener('click',function(e){
	if(planVis){
     GGD_chart.series[0].hide()
     document.getElementById("pb").setAttribute('src','../../GGD_page/button_gray.png')
     }else{
	   GGD_chart.series[0].show()
	   document.getElementById("pb").setAttribute('src','../../GGD_page/button_white.png')
     }
     planVis=!planVis
     var mx=Math.floor(GGD_chart.axes[0].max*10)/10-1
	advance_chart.update({xAxis:{max:mx}})
	Effect_chart.update({xAxis:{max:mx}})
	NPV_chart.update({xAxis:{max:mx}})
	mx=Math.floor(GGD_chart.axes[1].max*10)/10
	GGD_chart.update({yAxis:[{},{max:mx}]})
	webMI.data.write('AGENT.OBJECTS.RigConstruction.nowMax',mx)
 })
 
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
 
document.getElementById("fb").addEventListener('click',function(e){
	if(factVis){
     GGD_chart.series[1].hide()
     document.getElementById("fb").setAttribute('src','../../GGD_page/button_gray.png')
     }else{
	   GGD_chart.series[1].show()
	   document.getElementById("fb").setAttribute('src','../../GGD_page/button_red.png')
     }
     factVis=!factVis
     var mx=Math.floor(GGD_chart.axes[0].max*10)/10-1
	advance_chart.update({xAxis:{max:mx}})
	Effect_chart.update({xAxis:{max:mx}})
	NPV_chart.update({xAxis:{max:mx}})
	mx=Math.floor(GGD_chart.axes[1].max*10)/10
	GGD_chart.update({yAxis:[{},{max:mx}]})
	webMI.data.write('AGENT.OBJECTS.RigConstruction.nowMax',mx)
 })
 
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
 
document.getElementById("db").addEventListener('click',function(e){
	if(drillVis){
     GGD_chart.series[2].hide()
     document.getElementById("db").setAttribute('src','../../GGD_page/button_gray.png')
     }else{
	   GGD_chart.series[2].show()
	   document.getElementById("db").setAttribute('src','../../GGD_page/button_yellow.png')
     }
     drillVis=!drillVis
     var mx=Math.floor(GGD_chart.axes[0].max*10)/10-1
	advance_chart.update({xAxis:{max:mx}})
	Effect_chart.update({xAxis:{max:mx}})
	NPV_chart.update({xAxis:{max:mx}})
	mx=Math.floor(GGD_chart.axes[1].max*10)/10
	GGD_chart.update({yAxis:[{},{max:mx}]})
	webMI.data.write('AGENT.OBJECTS.RigConstruction.nowMax',mx)
 })
 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
 
webMI.gfx.setScaledEvents(document.getElementById('GGD_container'),true)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

webMI.data.subscribe("AGENT.OBJECTS.Depth_day_data.start_date", function(e) {
var id = "id_4";
var value = new Date();
value.setTime(e.value)
//console.log(value)
var str =""
var buf=value.getDate()
if(buf<10){
	str=str+"0"+buf
}else{
	str=str+buf
}
str=str+"."
buf=value.getMonth()
buf++;
if(buf<10){
	str=str+"0"+buf
}else{
	str=str+buf
}
str=str+"."
buf=value.getFullYear()
str=str+buf;
webMI.gfx.setText(id, str);

});

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////Заполнение 

webMI.data.subscribeBlock(["AGENT.OBJECTS.Depth_day_data.end_date","AGENT.OBJECTS.Depth_day_data.start_date","AGENT.OBJECTS.Depth_day_data.plan_data","AGENT.OBJECTS.IVE50.Well.WellDepth","AGENT.OBJECTS.IVE50.Tool.ToolPosition"], function(e) {
var id = "id_8";
var res=e[0].value-e[1].value
res = Math.floor(res/8640000)/10
var str=res+" дней"
webMI.gfx.setText(id, str);
res = Date.now()-e[1].value
res = Math.floor(res/8640000)/10
str=res+" дней"
webMI.gfx.setText("id_12", str);
res = JSON.parse(e[2].value)
res=res[res.length-1].vD
str=res
webMI.gfx.setText("id_15", str);
res=Math.floor(e[3].value*100)/100
webMI.gfx.setText("id_19", res);
res=Math.floor(e[4].value*100)/100
webMI.gfx.setText("id_23", res);
});

///////////////////////////////////////////////////////////////////////////////////////Заполнение ГГД факт (долото/забой)

webMI.data.read(["AGENT.OBJECTS.Depth_day_data.plan_data","AGENT.OBJECTS.Depth_day_data.end_date","AGENT.OBJECTS.Depth_day_data.start_date"],function(e){
	var data_raw=JSON.parse(e[0].value)
	var start_day=e[2].value
	var end_day=e[1].value
	var res=[]
	var plan=[]
	var fact=[]
	res=data_raw.map(function(f){
		var ts=(f.time-start_day)/86400000
		return {x:ts,y:f.vD,name:f.time+";"+f.opr}
	})
	
	//console.log(res)
	GGD_chart.series[0].update({data:res})
	plan=res
	webMI.data.call("GetHistoryAvrg",{t1:start_day,t2:Date.now(),address:"g:AGENT.OBJECTS.IVE50.Well.WellDepth"},function(f){
	//console.log(f)
	
		res=f.map(function(t){
		var ts=(Math.floor(t[0])-start_day)/86400000
		return {x:ts,y:Math.floor(t[1]),name:t[0]+";"}
		
	})
	GGD_chart.series[1].update({data:res})
	fact=res
	setAdvance(plan,fact)
	
	for(var i=0;i<plan[plan.length-1].x;i++){
	}
	})
	webMI.data.call("GetHistoryAvrg",{t1:start_day,t2:Date.now(),address:"g:AGENT.OBJECTS.IVE50.Tool.ToolPosition"},function(f){
	//console.log(f)
			res=f.map(function(t){
		var ts=(Math.floor(t[0])-start_day)/86400000
		return {x:ts,y:Math.floor(t[1]),name:t[0]+";"}
		
	})
	GGD_chart.series[2].update({data:res})

	var mx=Math.floor(GGD_chart.axes[0].max*10)/10-1
	advance_chart.update({xAxis:{max:mx}})
	Effect_chart.update({xAxis:{max:mx}})
	NPV_chart.update({xAxis:{max:mx}})
	mx=Math.floor(GGD_chart.axes[1].max*10)/10
	GGD_chart.update({yAxis:[{},{max:mx}]})
	webMI.data.write('AGENT.OBJECTS.RigConstruction.nowMax',mx)
	//console.log(GGD_chart.axes)
	
	})
	
})

///////////////////////////////////////////////////////////////////////////////////////Диаграмма "Ежедневная сводка операций"

var oper_chart = Highcharts.chart(document.getElementById("operations_container"),{
  chart: {
      type: 'xrange',
      width: 400,
      height:700,
      backgroundColor:'#1f1f1f',
      plotBackgroundColor:'#333333'
  },
  tooltip:{
    formatter: function(){
      var str=""
      str+=this.point.name
      str=str+'<br/>'
      str=str+Math.floor(this.x/10*24)/10+'ч - '+Math.floor(this.x2/10*24)/10+'ч'
      return str
    }
  },
  plotOptions:{
	series:{
		turboThreshold:60000
	}
  },
  title: {
      text: 'ЕЖЕДНЕВНАЯ СВОДКА ОПЕРАЦИЙ',
      style:{
        "fontSize":"1.2em",
        color:'white'
      },
      margin:0
  },
  legend: {
    enabled:false
  },
  credits:{
    enabled:false
  },
  xAxis: {
      type: 'linear',
      labels:{
        format:'{text}%',
        style:{
          color:'white',
          fontSize:'9px'
        }
      },
      gridLineWidth:1,
      tickInterval:20,
      min:0,
      max:100,
      opposite:true
  },
  yAxis: {
      max:10,
      title: {
          text: ''
      },
      labels:{
        style:{
          color:'white'
        }
      },
      categories: ['02.07', '03.07', '04.07','05.07','06.07','07.07','08.07'],
      reversed: true,
      gridLineWidth:0
  },
  series: [{
      name: 'operData',
      // pointPadding: 0,
      // groupPadding: 0,
      pointWidth: 10,
      borderRadius:0,
      borderWidth:0,
      data: [],
      dataLabels: {
          enabled: true
      }
  }]
})
/////////////////////////////////////////////////////////////////////////////////////// Круговая диаграмма операций

var pie_chart = Highcharts.chart(document.getElementById('pie_container'), {
	labels: {
        useHTML: Highcharts.hasBidiBug
    },
    chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie',
        width:391,
        height:300,
        backgroundColor:'#000'
    },
    title: {
        text:''
    },
    tooltip: {
		/*headerFormat:'<b>{point.name}</b>',
        pointFormat: '{point.percentage:.1f}%'*/
        formatter:function(){
			var str=''
			str=str+'<b>'+this.point.name+'</b><br>'
			str=str+Math.floor(this.point.percentage*100)/100+'%'
			//console.log(this.point)
			return str
        }
    },
    accessibility: {
        point: {
            valueSuffix: '%'
        }
    },   
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
                enabled: false
            }
        }
    },
    series: [{
        name: 'Brands',
        colorByPoint: true,
        data: []
    }]
});

///////////////////////////////////////////////////////////////////////////////////////Диаграмма опережение/отставание

var advance_chart = Highcharts.chart(document.getElementById('gotta_go_fast_container'), {
  chart: {
      type: 'column',
      height:50,
      width:1078,
      margin:[0,0,0,0],
      backgroundColor:'#333333'
  },
  title: {
      text: 'Отклонение от нормы (часы)',
      style:{
		"display":"none"
      },
      
  },
  xAxis: {
      categories: [],
      min:0,
      max:25,
      labels:{
		enabled:false
      },
      tickInterval:1,
      gridLineWidth:1,
      gridLineColor:'#6e6f70'
  },
  yAxis: {
      title: {
          enabled:false
      },
      labels:{
		enabled:false
      },
      tickInterval:2,
      gridLineColor:'#6e6f70'
  },
  legend:{
    enabled:false
  },
  credits:{
    enabled:false
  },
  tooltip: {
      enabled:false
  },
  plotOptions: {
      column: {
          pointPadding: 0,
          borderWidth: 0
      }
  },
  series: [{
      name: 'Advance',
      data: [],
      pointRange:1.5

  }]
});

///////////////////////////////////////////////////////////////////////////////////////

webMI.gfx.setScaledEvents(document.getElementById('gotta_go_fast_container'), true)

///////////////////////////////////////////////////////////////////ГРАФИК ЭФФЕКТИВНОСТИ

var Effect_chart = Highcharts.chart(document.getElementById('Effecivity_container'), {
  chart: {
      type: 'line',
      height:50,
      width:1078,
      margin:[0,0,0,0],
      backgroundColor:'#333333'
  },
  title: {
      style:{
		"display":"none"
      },
      
  },
  xAxis: {
      categories: [],
      min:0,
      max:25,
      tickInterval:1,
      gridLineWidth:1,
      gridLineColor:'#6e6f70',
      labels:{
		enabled:false
      }
  },
  yAxis: {
	min:-0.5,
	max:0.5,
      title: {
          enabled:false
      },
      labels:{
		enabled:false
      },
      tickInterval:0.5,
      gridLineColor:'#6e6f70'
  },
  legend:{
    enabled:false
  },
  credits:{
    enabled:false
  },
  tooltip: {
      enabled:false
  },
  plotOptions: {
      column: {
          pointPadding: 0,
          borderWidth: 0
      }
  },
  series: [{
      name: '',
      data: [
        
      ],
      zones:[{value:-0.02,color:'#ff0000'},{value:0.02,color:'#0cbce8'},{color:'#00ff00'}]

  }]
});

/////////////////////////////////////////////////////////////////////////////////////// Запрос и формирование данных для ежедневной сводки операций

webMI.data.read(["AGENT.OBJECTS.Depth_day_data.start_date","AGENT.OBJECTS.Depth_day_data.end_date"],function(e){
	var update_arr=[]
	var start = new Date()
	var end = new Date()
	if(e[1].value>Date.now()){
		start.setTime(e[0].value)
		end.setTime(e[1].value)
	}
	else{
		start.setTime(e[0].value)
		end.setTime(Date.now())
	}
	var ran = (end-start)/86400000
	if((ran%1)!=0){
		ran=Math.floor(ran+1)
	}
	//console.log(ran)
	for(var i=0;i<=ran;i++){
		var str=""
		var ntp=parseInt(e[0].value)+i*86400000
		var nd=new Date()
		nd.setTime(ntp)
		var buf=nd.getDate()
		if(buf<10){buf="0"+buf}
		str=str+buf+'.'
		buf=nd.getMonth()+1
		if(buf<10){buf="0"+buf}
		str=str+buf
		update_arr.push(str)
	}
	//console.log("start: "+start,"end: "+end,"now: "+new Date().setTime(Date.now()))
	oper_chart.update({
		yAxis:{
			max:ran,
			categories:update_arr
		}
	})
	
	webMI.data.call("GetHistoryOperations",{t1:start.getTime(),t2:Date.now(),address:"g:AGENT.OBJECTS.Support.Auto.Operation"},function(f){
		console.log(f)
		oper_chart.series[0].update({data:f[0]})
		var oper_raw = f[0].map(function(el){
			var obj = {
				oper : el.name,
				prod: (el.x2-el.x),
				color: (el.color)			
			}
			if(obj.oper === "Постановка "){obj.oper = "Постановка"}
			if(obj.oper === "Остановка "){obj.oper = "Остановка"}
			return obj		
		})
		var namesArr=[]
		var numbersArr=[]
		var colorsArr=[]
		var max = 0
		oper_raw.forEach(function(el){
				var index  = namesArr.indexOf(el.oper)
				if(index===-1){
					namesArr.push(el.oper)
					numbersArr.push(el.prod)
					colorsArr.push(el.color)
					max+=el.prod
				}
				else{
					numbersArr[index]+=el.prod
					max+=el.prod
				}
			})
		var operations = []
		numbersArr.forEach(function(el,cnt){
				if(namesArr[cnt]!=null){
				var Obj = {
					id:"",
					color:colorsArr[cnt],
					name:namesArr[cnt],
					time:el/max*100
				}
				operations.push(Obj)}
			})
		console.log(operations)
		pie_chart.series[0].update({data:operations.map(function(el){return{name:el.name, y:el.time}}), colors:operations.map(function(item){return item.color})})
		operations.forEach(function(item){
			var text_to_push = '<tr><td style="width:259px;margin-right:7px;"><div style="padding-left:40px">'
			text_to_push +=	'<div style="width:10px;height:10px;background-color:'+item.color+'; display: inline-block; border-radius:50%"></div>'
			text_to_push += '<div style="display: inline-block"><b>'+item.name+'</b></div></div></td><td id="oper_1" style="width:125px; text-align:center;">'
			text_to_push += item.time.toFixed(1) + '</td></tr>'
			console.log(text_to_push)
			document.getElementById('oper_table').insertAdjacentHTML('beforeend',text_to_push)
		})
	})
	
	
})

///////////////////////////////////////////////////////////////////////////////////////////ПЕРЕКЛЮЧЕНИЕ ГРАФИК/СПИСОК

var ChartOn=false
document.getElementById('switchPieChart').addEventListener('click',function(e){
	if(ChartOn){
		document.getElementById('pie_figure').style.display='none'
		document.getElementById('oper_legend').style.display='block'
		ChartOn=!ChartOn
	}else{
		document.getElementById('pie_figure').style.display='block'
		document.getElementById('oper_legend').style.display='none'
		ChartOn=!ChartOn
	}
})

///////////////////////////////////////////////////////////////////////////////////////////ОПРЕЖЕНИЕ/ОТСТАВАНИЕ

function setAdvance(plan,fact){
	//console.log(plan)
	//console.log(fact)
	var res=[]
	for(var i=0;i<fact[fact.length-1].x;i++){
		res.push("")
	}
	fact.forEach(function(e){
		var cnt=Math.floor(e.x)
		res[cnt]=e
	})
	//console.log(res)
	
	var adv_chart_data=[]
	res.forEach(function(e){
		var buf=[]
		for(var i=0;i<plan.length;i++){
			if(plan[i].y>e.y){
				buf=[plan[i],plan[i-1]]
				//console.log(buf)
				break;
			}
		}
		//console.log(buf)
		if(buf.length!=0){
			var elem = ((e.y-buf[1].y)/(buf[0].y-buf[1].y))*(buf[0].x-buf[1].x)+buf[1].x-e.x
			var res_el={}
			res_el.y=elem;
			if(elem>0){res_el.color='#00ccff'}else{res_el.color='#ff0000'}
			adv_chart_data.push(res_el)
		}else{
			if(adv_chart_data.length!=0){
				var res_el={}
				if(e.y>=plan[plan.length-1].y){
					res_el.y = plan.filter(function(f){if(f.y==plan[plan.length-1].y){return f}})[0].x-e.x
					if(res_el.y>0){res_el.color='#00ccff'}else{res_el.color='#ff0000'}
				}
				else{
					res_el.y=adv_chart_data[adv_chart_data.length-1].y-1
					res_el.color=adv_chart_data[adv_chart_data.length-1].color
				}
				
				
				adv_chart_data.push(res_el)
			}else{
				adv_chart_data.push({y:-1,color:'#ff0000'})
			}
		}
		
	})
	//console.log(adv_chart_data)
	advance_chart.series[0].update({data:adv_chart_data})
	setNPV(adv_chart_data)
	setEffectivity(adv_chart_data)
	var hours = Math.floor(adv_chart_data[adv_chart_data.length-1].y*24*10)/10
	if(hours<0){
		webMI.gfx.setFill('id_34','#ff0000')
	}else{
		webMI.gfx.setFill('id_34','#00ccff')
	}
	webMI.gfx.setText('id_34', hours);
}

////////////////////////////////////////////////////////////////ЭФФЕКТИВНОСТЬ

function setEffectivity(raw_data){
	//console.log(raw_data)
	var numberOfDays=Math.floor(GGD_chart.axes[0].max*10)/10
	//console.log(numberOfDays)
	res=[]
	numberOfDays--;
	for(var i=0;i<raw_data.length;i++){
		var buf=0;
		var t0=numberOfDays*24
		var dt=0
		if(i==0){
			dt=raw_data[i].y*24
		}
		else{
			dt=(raw_data[i].y-raw_data[i-1].y)*24
		}
		if(Math.abs(dt)>24){
			buf=1.5
		}else{
			buf=t0/(t0-((t0/24)*dt))
		}
		if(buf>1.5){buf=1.5}
		if(buf<0.5){buf=0.5}
		buf=[i-0.5,buf-1]
		res.push(buf)
		buf=[i+0.5,buf[1]]
		res.push(buf)
		numberOfDays--
	}
	//console.log(res)
	var val=Math.floor((res[res.length-1][1]+1)*100)/100
	//console.log(val)
	if(val<1){
		webMI.gfx.setFill('id_31','#ff0000')
	}
	else if(val==1){
		webMI.gfx.setFill('id_31','#0cbce8')
	}
	else{
		webMI.gfx.setFill('id_31','#00ff00')
	}
	webMI.gfx.setText('id_31', val);
	Effect_chart.series[0].update({data:res})
}

/////////////////////////////////////////////////////////////////////////////кнопка редактировать НПВ

/*document.getElementById('setNPV').addEventListener('click',function(e){
	webMI.display.openDisplay('AGENT.DISPLAYS.NewView.ForGGD.NPV_table',webMI.query,'main_frame');
})*/
webMI.gfx.setScaledEvents(document.getElementById('NPV_container'),true)

/////////////////////////////////////////////////////////////////////////////ГРАФИК НПВ

var NPV_chart = Highcharts.chart(document.getElementById('NPV_container'), {
  chart: {
      type: 'column',
      height:50,
      width:1078,
      margin:[0,0,0,0],
      backgroundColor:'#333333'
  },
  title: {
      text: 'Отклонение от нормы (часы)',
      style:{
		"display":"none"
      },
      
  },
  xAxis: {
      categories: [],
      min:0,
      max:25,
      labels:{
		enabled:false
      },
      tickInterval:1,
      gridLineWidth:1,
      gridLineColor:'#6e6f70'
  },
  yAxis: {
      min:0,
      title: {
          enabled:false
      },
      labels:{
		enabled:false
      },
      gridLineWidth:0,
      //tickInterval:2,
      //gridLineColor:'#6e6f70'
  },
  legend:{
    enabled:false
  },
  credits:{
    enabled:false
  },
  tooltip: {
      enabled:true,
      headerFormat:'',
      pointFormat: '{series.name}: <b>{point.y}</b><br/>',
      valueSuffix: 'ч'
      
  },
  plotOptions: {
      column: {
          pointPadding: 0,
          borderWidth: 0
      }
  },
  series: [{
      name: 'НПВ',
      data: [],
      color:'red',
      pointRange:1.5

  }]
});

/////////////////////////////////////////////////////////////////////////////ЗАПОЛНЕНИЕ ГРАФИКА НПВ

/*webMI.data.read('AGENT.OBJECTS.Depth_day_data.NPV',function(e){
	var res=[]
	var NPVsum=0
	var raw = JSON.parse(e.value)
	raw.forEach(function(f){
		res.push({y:parseFloat(f.td2),color:'#f00'})
		NPVsum+=parseFloat(f.td2)
	})
	//console.log(res)
	webMI.gfx.setText('id_39', NPVsum);
	NPV_chart.series[0].update({data:res})
})*/
function setNPV(data){
console.log(data)
	var sum=0;
	res=[]	
	/*var res=data.map(function(e){
		if(e.y<0){
			sum=sum-(e.y*24)
			return Math.abs(Math.floor(e.y*24*10)/10)		
		}
		else{
			return 0				
		}	
	})*/
	var t=0;
	data.forEach(function(e){
		var buf=t-e.y
		if((buf>0)&&(e.y<0)){
			res.push(Math.floor(buf*24*10)/10)
			sum+=Math.floor(buf*24*10)/10		
		}
		else{
			res.push(0)
		}	
		t=e.y
	})
	console.log(res,sum)
	webMI.gfx.setText('id_39',Math.floor(sum*10)/10);
	NPV_chart.series[0].update({data:res})
	webMI.data.write("AGENT.OBJECTS.Depth_day_data.NPV",JSON.stringify(res))
	
}]]></script>
</svg>
