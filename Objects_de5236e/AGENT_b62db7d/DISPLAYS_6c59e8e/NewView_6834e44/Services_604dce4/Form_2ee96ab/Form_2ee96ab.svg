<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="580" version="1.2" width="500" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:gridconfig enabled="true" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <g atv:insensitive="true" atv:refpx="0" atv:refpy="0" id="id_0" transform="matrix(0.3906,0,0,0.853,0,0)">
  <rect atv:refpx="640" atv:refpy="340" fill="#1f1f1f" height="680.00" id="id_1" width="1280.00" x="0" y="0"/>
 </g>
 <foreignObject height="351.443" id="id_5" width="425.689" x="37.155" y="218.557">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml">
   <form class="auth-form" id="auth_form">
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_startDate" placeholder=" " tabindex="1" type="text"/>
      <label class="label-wrapper" for="input_startDate">
       <span class="Hint-text">Время начала</span>
      </label>
     </div>
    </div>
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_organization" placeholder=" " tabindex="2" type="text"/>
      <label class="label-wrapper" for="input_organization">
       <span class="Hint-text">Организация</span>
      </label>
     </div>
    </div>
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_engineer" placeholder=" " tabindex="3" type="text"/>
      <label class="label-wrapper" for="input_engineer">
       <span class="Hint-text">Инженер</span>
      </label>
     </div>
    </div>
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_ePhoneNumber" placeholder=" " tabindex="4" type="text"/>
      <label class="label-wrapper" for="input_ePhoneNumber">
       <span class="Hint-text">Телефон инженера</span>
      </label>
     </div>
    </div>
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_eMail" placeholder=" " tabindex="5" type="text"/>
      <label class="label-wrapper" for="input_eMail">
       <span class="Hint-text">Эл.почта инженера</span>
      </label>
     </div>
    </div>
    <div class="choice-menu__body" style="justify-content:space-between;width:100%;">
     <div style="display:flex;justify-content:center;width:100%;">
      <button class="button-blue" id="saveButton" style="width:352px;max-width:90%;" tabindex="6" type="button" value="submit">Сохранить</button>
     </div>
    </div>
   </form>
  </div>
 </foreignObject>
 <foreignObject height="72.5" id="id_6" width="425" x="37.5" y="25.045">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml">
   <form id="radioButtonsContainer" style="display:flex;"/>
  </div>
 </foreignObject>
 <foreignObject height="31.636" id="id_2" width="330.864" x="84.568" y="87.409">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml">
   <p class="green-text" id="currentService" style="text-align:center;">Растворный сервис</p>
  </div>
 </foreignObject>
 <foreignObject height="36.777" id="id_7" width="350" x="-495.629" y="150.213">
  <div style="width:100%;height:100%;display:flex;align-items:center;justify-content:center;" xmlns="http://www.w3.org/1999/xhtml">
   <label style="widtht:100%;height:100%;box-sizing:border-box;">
    <div class="button-blue" style="width:350px;max-width:100%;height:45px;max-height:100%;text-align:center;box-sizing:border-box;display:flex;align-items:center;justify-content:center;">Загрузить план</div>
    <input accept=".csv" class="file-input" data-create="fromFile" id="uploadPlan" type="file"/>
   </label>
  </div>
 </foreignObject>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[var currentService;
var radioButtonsContainer = document.getElementById("radioButtonsContainer");
var serviceData = ["startDate", "organization", "engineer", "ePhoneNumber", "eMail"];
var saveButton = document.getElementById("saveButton");
var currentServiceEl = document.getElementById("currentService");
var paths = [];
var inputs = [];

var serviceNames = {
	"NNB": "ННБ",
	"Mud": "Растворный сервис",
	"Bit": "Долотный сервис",
	"Concrete": "Цементаж"
};

var buttons = [
	{
		label: "Растворный сервис", // label
		dataset: "choice", // choice
		datasetValue: "Mud", //variable name
		class: "button__label-dark" // class
	},
	{
		label: "Долотный сервис",
		dataset: "choice",
		datasetValue: "Bit",
		class: "button__label-dark"
	},
	{
		label: "ННБ",
		dataset: "choice",
		datasetValue: "NNB",
		class: "button__label-dark"
	},
	{
		label: "Цементаж",
		dataset: "choice",
		datasetValue: "Concrete",
		class: "button__label-dark"
	}
];

function generateForm() {
	fillContainer();
	fillPaths();
	fillInputs();
	for (i in serviceData) {
		inputs.push(document.getElementById("input_" + serviceData[i]));
	}
}
generateForm();


function createButton(data, i) {
	var disabled = !hasRight(data.datasetValue) ? "background:grey;color:#000;pointer-events:none;" : ""
	
	//var label = "<label for=" + "radio_" + i + " class=" + data.class + " style='font-size:10px;text-align:center;'>" + data.label + "</label>";
	//var input = "<input value=" + data.datasetValue + " type='radio' id=radio_" + i + " name=currentService style='width:100%;display:none;' data-" + data.dataset + "=" + data.datasetValue + "/>";
	var button = "<button type=button class=" + data.class + " style=width:100%;font-size:10px;" + disabled + " data-" + data.dataset + "=" + data.datasetValue + ">" + data.label + "</button>";
	
	//console.log(button)	
	
	return button
	//return input + label
}

function fillContainer() {
	for (i in buttons) {
		radioButtonsContainer.insertAdjacentHTML("beforeend", createButton(buttons[i]));
	}
}
//fillContainer();

function hasRight(right) {

	if(webMI.hasRight("USER." + right) || webMI.hasRight("USER." + "Services")){
		return true
	}
	
	return false
}

//console.log(hasRight("Bit"))

function fillPaths(data) {
	paths = [];
	for (i in data) {
		paths.push("AGENT.OBJECTS.ServiceParams." + (currentService ? currentService : "Mud") + "." + data[i])
	}
}

//fillPaths(serviceData);

radioButtonsContainer.addEventListener("click", function(event) {
	if (event.target.dataset.choice) {
		currentService = event.target.dataset.choice;
		currentServiceEl.innerHTML = serviceNames[event.target.dataset.choice];
		fillInputs();
	}
});

function fillInputs() {
	if (!currentService) currentService = "Mud"
	fillPaths(serviceData);
	webMI.data.read(paths, function(e) {
		for (i in e) {
			var input = document.getElementById("input_" + serviceData[i]);
			input.value = input.id.includes("startDate") ? beautifyDate(new Date(parseFloat(e[i].value))) : e[i].value;
		}
	})
}
//fillInputs();

saveButton.addEventListener("click", function() {
	save();
})

function save() {
	var values = [];

	fillPaths(serviceData);
	for (i in serviceData) {
		var input = document.getElementById("input_" + serviceData[i]);
		
		values.push(input.id.includes("startDate") ? uglifyDate(input.value).getTime() + "" : input.value);
		//console.log("date:", uglifyDate(input.value));
	}
	webMI.data.write(paths, values)
	webMI.display.closeWindow();
}

function addListeners(elems) {
	for (i in elems) {
		elems[i].addEventListener('keydown', function(f) {
			if (f.srcElement.getAttribute('readonly') != 'true') {
				if (f.key == 'Backspace') {
					var start = f.srcElement.selectionStart;
					var end =  f.srcElement.selectionEnd;
					var temp = f.srcElement.value.split("");
					if (end != start) {
						temp.splice(start, (end - start));
						f.srcElement.value = temp.join("");
						f.srcElement.selectionStart = start;
						f.srcElement.selectionEnd = start;
						
					} else {
						temp.splice(start - 1, 1);
						f.srcElement.value = temp.join("");
						f.srcElement.selectionStart = start - 1;
						f.srcElement.selectionEnd = start - 1;
						
					}
				}
				if (f.key == 'Enter') {
					if (f.srcElement.tabIndex == 5) save()
					else inputs[f.srcElement.tabIndex].focus()
					
				}
				if (f.key == 'Tab') {
					if (f.srcElement.tabIndex > 5) inputs[f.srcElement.tabIndex].focus();
				}
			}
		})
	}
}

function uglifyDate(date) {
	console.log(date);
	var day = date.replace(/\.\d{2}\.\d{4}/, "");
	var month = date.replace(/\d{2}/, "").replace(/\.\d{4}/, "");
	var year = date.replace(/\d{2}\.\d{2}/, "");
	
	var dateString = (year + "-" + month + "-" + day).replace(/\./g, "").replace(/\s/g, "");
	//console.log(dateString);
	return new Date(dateString)
}

function beautifyDate(date) {
	var str = "";
	var buf;
	
	buf = date.getDate()
	if (buf < 10) {
		buf= "0" + buf;
	}
	str += buf+'.'
	
	buf = date.getMonth()+1;
	if (buf < 10) {
		buf = "0" + buf;
	}
	str += buf + '.';
	
	buf = date.getFullYear()
	if (buf < 10){
		buf = "0" + buf
	}
	str += buf + " ";
		/*
	buf = date.getHours()
	if (buf < 10){
		buf = "0" + buf
	}
	str += buf + ":";
	
	buf = date.getMinutes()
	if (buf < 10){
		buf = "0" + buf
	}
	str += buf;
	*/
		
		
	return str
}

addListeners(inputs);

]]></script>
</svg>
