<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="62" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:parameter behavior="mandatory" defaultvalue="" name="name" substitute="$NAME$" valuetype="string"/>
  <atv:parameter behavior="mandatory" desc="Не менять" name="stateVar" valuetype="address"/>
  <atv:parameter behavior="mandatory" defaultvalue="" desc="Путь до переменной" name="varPath" valuetype="string"/>
  <atv:parameter behavior="mandatory" defaultvalue="" name="inputID" valuetype="string"/>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <rect atv:refpx="100" atv:refpy="46.766" fill="#ffffff" height="30.888" id="id_1" stroke="none" stroke-width="0" width="200" x="0" y="31.322"/>
 <svg atv:refpx="100" atv:refpy="46.906" height="31" id="id_0" width="100" x="50" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.FlatComponents.Picker%20Date" y="31.406">
  <atv:argument name="fillColor" value="#ffffff"/>
  <atv:argument name="fillColorInactive" value="#ffffff"/>
  <atv:argument name="strokePressed" value="#ffffff"/>
  <atv:argument name="focusStrokeColor" value="#ffffff"/>
  <atv:argument name="name" value="selectDate"/>
  <atv:argument name="fontColor" value="#000000"/>
  <atv:argument name="base" prefix="stateVar"/>
  <atv:overwrite id="button_label" transform="matrix(1.0015,0,0,1,-0.0307,0)" x="50.97"/>
 </svg>
 <text atv:refpx="100.208" atv:refpy="14.851" fill="#ffffff" font-family="Arial" font-size="14" id="id_3" text-anchor="middle" transform="matrix(1,0,0,0.9259,0,0.1024)" x="100" y="20.882">$NAME$</text>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[var varPathConfig = {
    id: webMI.query["inputID"],
    varPath: webMI.query["varPath"]
};

setTimeout(function(){
	webMI.trigger.fire("varPath", varPathConfig);
}, 0);


var stateVarConfig = {
	id: webMI.query["inputID"],
	stateVar: webMI.query["stateVar"]
};

setTimeout(function () {
    webMI.trigger.fire("stateVar", stateVarConfig);
}, 0);]]></script>
</svg>
