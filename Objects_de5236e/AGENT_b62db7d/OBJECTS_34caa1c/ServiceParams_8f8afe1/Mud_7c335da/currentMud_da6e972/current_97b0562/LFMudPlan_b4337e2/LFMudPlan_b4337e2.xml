<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
    <priority>0</priority>
  </metadata>
  <parameter name="directFact" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.cols.Direct"/>
  <parameter name="kondFact" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.cols.Kond"/>
  <parameter name="techColFact" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.cols.TechCol"/>
  <parameter name="tailFact" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.cols.Tail"/>
  <parameter name="exColFact" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.cols.ExCol"/>
  <parameter name="startDate" type="node.value" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.Depth_day_data.start_date"/>
  <parameter name="density1" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.currentMud.density"/>
  <parameter name="viscosity2" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.currentMud.viscosity"/>
  <parameter name="waterLoss3" type="node" trigger="false" relative="false" value="ns=1;s=AGENT.OBJECTS.ServiceParams.Mud.currentMud.waterLoss"/>
  <parameter name="interval" type="interval" trigger="true" relative="false" value="" offset="00:00:00" interval="00:00:10"/>
  <code><![CDATA[var facts = [directFact, kondFact, techColFact, exColFact, tailFact]

//console.log("trigger")
try {
	var density = new UaNode("AGENT.OBJECTS.ServiceParams.Mud.currentMud.density.plan")
	var viscosity = new UaNode("AGENT.OBJECTS.ServiceParams.Mud.currentMud.viscosity.plan")
	var waterLoss = new UaNode("AGENT.OBJECTS.ServiceParams.Mud.currentMud.waterLoss.plan")
	
	function findLast(facts) {
		var last
		var len = facts.reverse().length	
		for (var i = 0; i < len; i++) {
			if (facts[i].value.length > 0) {
				var rows = JSON.parse(facts[i].value).rows
				//console.log("rows: ", rows);
				if (rows && rows.length > 0 && facts[i].servertime > startDate) {
					last = rows[rows.length - 1]
					//console.log(last)
					break
				}
			}
			
		}	
		return last || 0
	}
	
	function fillParams(facts) {
		var row = findLast(facts)
		//console.log(row)
		if (row) {
		// gomennasorry
			Object.entries(row).map(function(val) {
				//console.log(val)
				if (val[0].includes("Плотность")) {
					//console.log("true1")
					density.assign({ value: val[1].replace(",", ".") || "0" })
				}
				if (val[0].includes("Условная вязкость")) {
					//console.log("true2")
					viscosity.assign({ value: val[1].replace(",", ".") || "0" })
				}
				if (val[0].includes("Водоотдача")) {
					 //console.log("true3")
					 waterLoss.assign({ value: val[1].replace(",", ".") || "0" })
				}
			})
		}
	}
	
	fillParams(facts)
}
catch(err) {
	console.log("LFMud: ",err.message || err)
}


// waterLoss
// viscosity
//density]]></code>
</script>
