<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
    <priority>0</priority>
  </metadata>
  <parameter name="timer" type="timer" trigger="true" relative="false" value="" starttime="00:00:00" repeat="00:00:05"/>
  <code><![CDATA[var consolelog=false;
consolelog?console.log("-----------------------------------------------------------------------------------------------------"):'';

var limitBottomHole = 1;
var limitAboveBottomHole = 10; 

var toolPos = call('AutoHistory.getToolPos');
var wellDepth = call('AutoHistory.getWellDepth');

var diffWellPos = wellDepth-toolPos;

consolelog?console.log("Долото = ",Math.round(toolPos*100)/100):'';
consolelog?console.log("Забой  = ",Math.round(wellDepth*100)/100):'';


var weightOnHookMin = call('GetVarValue',{varname: 'AGENT.OBJECTS.Support.Auto.WeightOnHookMin'});

var WeightOnHookMQ = call('AutoHistory.getWeightOnHookMQ');

var isWeightOnHook = false;
if(WeightOnHookMQ.avrVal > weightOnHookMin){
	isWeightOnHook = true;
}

//var isWeightOnHook = call('AutoHistory.isWeightOnHook');

if(isWeightOnHook)
	consolelog?console.log('Вес на крюке есть: '+Math.round(call('AutoHistory.getWeightOnHook')*100)/100):'';
else
	consolelog?console.log('Нет веса на крюке'):'';

var isCirc = call('AutoHistory.isCirc');
if(isCirc){
	consolelog?console.log("Циркуляция есть, давление: "+Math.round(call('AutoHistory.getPressureManifold')*100)/100):'';
} else {
	consolelog?console.log("Циркуляции нет"):'';
}	
var isRotation = call('AutoHistory.isRotation');
if(isRotation){
	consolelog?console.log('Вращение есть: '+Math.round(call('AutoHistory.getTDSSpeed')*100)/100):'';
} else {
	consolelog?console.log('Вращения нет'):'';
}

var hookDir = call('AutoHistory.getDirection');
switch(hookDir){
	case 0:  
		consolelog?console.log('Крюкоблок стоит: '+Math.round(call('AutoHistory.getHookPos')*100)/100):'';
		break;
	case 1:
		consolelog?console.log("Крюкоблок движется вверх медленно: "+Math.round(call('AutoHistory.getHookPos')*100)/100):''; //Math.round(fullPenetrationApdModeTorque*100)/100
		break;
	case -1:
		consolelog?console.log("Крюкоблок движется вниз медленно: "+Math.round(call('AutoHistory.getHookPos')*100)/100):'';
		break;
	case 2:
		consolelog?console.log("Крюкоблок движется вверх быстро: "+Math.round(call('AutoHistory.getHookPos')*100)/100):'';
		break;
	case -2:
		consolelog?console.log("Крюкоблок движется вниз быстро: "+Math.round(call('AutoHistory.getHookPos')*100)/100):'';
		break;	
}

var isDeepening = call('AutoHistory.getDeepening');
if(isDeepening){
	consolelog?console.log('Углубление есть'):'';
} else {
	consolelog?console.log('Углубления нет'):'';
}


var isPressureRise = call('AutoHistory.isPressureRise');
if(isPressureRise)
	consolelog?console.log('Перепад'):'';

var CurOperJsonObj = JSON.parse(call('AutoHistory.GetOperationObj').value);

consolelog?console.log(' '):'';
consolelog?console.log(CurOperJsonObj.oper+' '+CurOperJsonObj.suboper):'';

var nodeHalliJson = new UaNode('AGENT.OBJECTS.Rig.Halliburton.HalliJson'); // the AGENT.OBJECTS.Rig.Halliburton.HalliJson means the calculate of Halliburton fact
if (nodeHalliJson.exists()){
	// Halliburton//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	var HalliMD = new UaNode('AGENT.OBJECTS.Support.Halliburton.MD');
	var HalliMeasuredWeightTripIn = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightTripIn');
	var HalliMeasuredWeightTripOut = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightTripOut');
	var HalliMeasuredWeightOffBottom = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightOffBottom');
	var HalliMeasuredWeightSlide = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightSlide');
	var HalliTorqueOnBottom = new UaNode('AGENT.OBJECTS.Support.Halliburton.TorqueOnBottom');
	var HalliTorqueOffBottom = new UaNode('AGENT.OBJECTS.Support.Halliburton.TorqueOffBottom');
	var HalliPressure = new UaNode('AGENT.OBJECTS.Support.Halliburton.Pressure');
	var HalliECD = new UaNode('AGENT.OBJECTS.Support.Halliburton.ECD');
	
	HalliMD.assign({value: toolPos});
	//var CurOperJsonObj = JSON.parse(call('AutoHistory.GetOperationObj').value);
	var RotorTorque = new UaNode('AGENT.OBJECTS.IVE50.Tool.RotorTorque');
	if(CurOperJsonObj.oper == 'БУРЕНИЕ' && CurOperJsonObj.suboper == 'ротором'){	
		HalliTorqueOffBottom.assign({value: RotorTorque.value});
	} else {
		HalliTorqueOffBottom.assign({value: 0});
	}
	if(isWeightOnHook){
		var CurrWeightOnHook = call('AutoHistory.getWeightOnHook') - weightOnHookMin;
		if(CurOperJsonObj.oper == 'БУРЕНИЕ' && CurOperJsonObj.suboper == 'слайдом'){	
			HalliMeasuredWeightTripIn.assign({value: 0});
			HalliMeasuredWeightTripOut.assign({value: 0});
			HalliMeasuredWeightOffBottom.assign({value: 0});
			HalliMeasuredWeightSlide.assign({value:CurrWeightOnHook});
		} else {
			if(diffWellPos >= limitBottomHole){	
				if(hookDir < 0){
					HalliMeasuredWeightTripIn.assign({value:CurrWeightOnHook});
					HalliMeasuredWeightTripOut.assign({value: 0});
					HalliMeasuredWeightOffBottom.assign({value: 0});
					HalliMeasuredWeightSlide.assign({value: 0});
				} else if(hookDir > 0){
					HalliMeasuredWeightTripIn.assign({value: 0});
					HalliMeasuredWeightTripOut.assign({value:CurrWeightOnHook});
					HalliMeasuredWeightOffBottom.assign({value: 0});
					HalliMeasuredWeightSlide.assign({value: 0});
				} else if(hookDir == 0){
					HalliMeasuredWeightTripIn.assign({value: 0});
					HalliMeasuredWeightTripOut.assign({value: 0});
					HalliMeasuredWeightOffBottom.assign({value:CurrWeightOnHook});
					HalliMeasuredWeightSlide.assign({value: 0});
				}
			} else {
				HalliMeasuredWeightTripIn.assign({value: 0});
				HalliMeasuredWeightTripOut.assign({value: 0});
				HalliMeasuredWeightOffBottom.assign({value: 0});
				HalliMeasuredWeightSlide.assign({value: 0});
			}
		}
		HalliPressure.assign({value: call('AutoHistory.getPressureManifold')});
		HalliECD.assign({value: 0});
	}
	var HalliObj = {};
	HalliObj.MD = HalliMD.value;
	HalliObj.MeasuredWeightTripIn = HalliMeasuredWeightTripIn.value;
	HalliObj.MeasuredWeightTripOut = HalliMeasuredWeightTripOut.value;
	HalliObj.MeasuredWeightOffBottom = HalliMeasuredWeightOffBottom.value;
	HalliObj.MeasuredWeightSlide = HalliMeasuredWeightSlide.value;
	HalliObj.TorqueOnBottom = HalliTorqueOnBottom.value;
	HalliObj.TorqueOffBottom = HalliTorqueOffBottom.value;
	HalliObj.Pressure = HalliPressure.value;
	HalliObj.ECD = HalliECD.value;
	
	var HalliJson = JSON.stringify(HalliObj);
	//var nodeHalliJson = new UaNode('AGENT.OBJECTS.Rig.Halliburton.HalliJson');
	nodeHalliJson.assign(HalliJson);
	// end Halliburton/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
consolelog?console.log('.....................................................................................................'):'';

//if(!isCirc && !isWeightOnHook){
if(!isWeightOnHook){
	var nodeStartOnWedges = new UaNode("AGENT.OBJECTS.Support.Auto.StartOnWedges");
	var operObj = call('AutoHistory.GetOperationObj');
	var operObjJson = JSON.parse(operObj.value);
//	console.log('oper.value = ', oper.value);	
	if(!(operObjJson.oper =='На клиньях')) {
		var curDate = new Date();
//		nodeStartOnWedges.assign({value: oper.sourcetime});
		nodeStartOnWedges.assign({value: curDate});
		//call('AutoHistory.setTimeOnWedges', {timeonwedges: oper.sourcetime});		
		call('SetVarValue', {varname:'AGENT.OBJECTS.Support.Auto.wasPipeKeyRun', varvalue: false}); 
		call('SetVarValue', {varname:'AGENT.OBJECTS.Support.Auto.wasTdsRun', varvalue: false});
	}

	var isTdsRun = call('AutoHistory.isTdsRun');
	var isPipeKeyRun = call('AutoHistory.isPipeKeyRun');
	if(hookDir == 2){
		call('AutoHistory.SetOperation',{id:'6.2', group:'КЛИНЬЯ', oper:'На клиньях', suboper:'крюкоблок идет вверх', operclr:'#663300', suboperclr:'#2E1802'});
	} else if(isPipeKeyRun){
		call('AutoHistory.SetOperation',{id:'6.4', group:'КЛИНЬЯ', oper:'На клиньях', suboper:'работа трубного ключа', operclr:'#663300', suboperclr:'#F0D087'});
		call('SetVarValue', {varname:'AGENT.OBJECTS.Support.Auto.wasPipeKeyRun', varvalue: true});
	} else if(isTdsRun){
		call('AutoHistory.SetOperation',{id:'6.5', group:'КЛИНЬЯ', oper:'На клиньях', suboper:'работа ВСП', operclr:'#663300', suboperclr:'#BD6E20'});
		call('SetVarValue', {varname:'AGENT.OBJECTS.Support.Auto.wasTdsRun', varvalue: true});
	} else {
		call('AutoHistory.SetOperation',{id:'6.1', group:'КЛИНЬЯ', oper:'На клиньях', suboper:'остановка', operclr:'#663300', suboperclr:'#DB865C'});
	}

/*	
	if(call('GetVarValue',{varname: 'AGENT.OBJECTS.Support.Auto.wasPipeKeyRun'})  && call('GetVarValue',{varname: 'AGENT.OBJECTS.Support.Auto.wasTdsRun'})){
		call('AutoHistory.SetOperation',{oper: 'На клиньях', suboper:'НАРАЩИВАНИЕ', opertime: nodeStartOnWedges.value, operclr:'#663300', suboperclr:'#DB9A39'});
		call('SetVarValue', {varname:'AGENT.OBJECTS.Support.Auto.wasPipeKeyRun', varvalue: false}); 
		call('SetVarValue', {varname:'AGENT.OBJECTS.Support.Auto.wasTdsRun', varvalue: false});
	}
*/	
	return;
}

if(isWeightOnHook && isCirc && isRotation && isDeepening && hookDir == -1 && isPressureRise){
	call('AutoHistory.SetOperation',{id:'1.1', group:'БУРЕНИЕ РОТОРОМ', oper:'БУРЕНИЕ',suboper:'ротором', operclr:'#1EE661', suboperclr:'#009933'});
	return;
}
if(isWeightOnHook && isCirc && !isRotation && isDeepening && hookDir == -1 && isPressureRise){
	call('AutoHistory.SetOperation',{id:'1.2', group:'БУРЕНИЕ СЛАЙДОМ', oper:'БУРЕНИЕ',suboper:'слайдом', operclr:'#1EE661', suboperclr:'#33СС66'});
	return;
}
if(isWeightOnHook && isCirc && isDeepening && hookDir == 0 && call('AutoHistory.getHookPos') <= 0 && diffWellPos >= 0 && diffWellPos < limitBottomHole){
	call('AutoHistory.SetOperation',{id:'4.1', group:'ПРОМЫВКА', oper: 'ПРОМЫВКА', suboper:'на забое', operclr:'#1583DC', suboperclr:'#4CA8C7'});
	return;
}

if(isWeightOnHook && isCirc && isDeepening && (hookDir == 0 || hookDir == -1) && CurOperJsonObj.oper == 'БУРЕНИЕ'){
	//call('AutoHistory.SetOperation',CurOperJsonObj);
	if(isRotation)
		call('AutoHistory.SetOperation',{id:'1.1', group:'БУРЕНИЕ РОТОРОМ', oper:'БУРЕНИЕ',suboper:'ротором', operclr:'#1EE661', suboperclr:'#009933'});
	else
		call('AutoHistory.SetOperation',{id:'1.2', group:'БУРЕНИЕ СЛАЙДОМ', oper:'БУРЕНИЕ',suboper:'слайдом', operclr:'#1EE661', suboperclr:'#33CC66'});
	return;
}

if(isWeightOnHook && isCirc && isDeepening && CurOperJsonObj.oper == 'ПРОМЫВКА' && CurOperJsonObj.suboper == 'на забое'){
	if(isRotation)
		call('AutoHistory.SetOperation',{id:'1.1', group:'БУРЕНИЕ РОТОРОМ', oper:'БУРЕНИЕ',suboper:'ротором', operclr:'#1EE661', suboperclr:'#009933'});
	else
		call('AutoHistory.SetOperation',{id:'1.2', group:'БУРЕНИЕ СДАЙДОМ', oper:'БУРЕНИЕ',suboper:'слайдом', operclr:'#1EE661', suboperclr:'#33CC66'});	
	return;
}

if(isWeightOnHook && isCirc && !isDeepening && (hookDir > 0 || hookDir < 0)){
	if(isRotation){	
		if(hookDir > 0)	
			call('AutoHistory.SetOperation',{id:'2.1', group:'ПРОРАБОТКА ПОДЪЕМ', oper:'ПРОРАБОТКА',suboper:'при подъеме', operclr:'#666633', suboperclr:'#999933'});
		else {
			if(diffWellPos >= 0 && diffWellPos < limitBottomHole){
				call('AutoHistory.SetOperation',{id:'4.1', group:'ПРОМЫВКА', oper:'ПРОМЫВКА', suboper:'на забое', operclr:'#1583DC', suboperclr:'#4CA8C7'});
			} else if(diffWellPos > 0 && diffWellPos < limitAboveBottomHole){
				call('AutoHistory.SetOperation',{id:'2.3', group:'ПРОРАБОТКА СПУСК', oper:'ПРОРАБОТКА', suboper:'при спуске над забоем', operclr:'#666633', suboperclr:'#CCCC33'});
			} else {
				call('AutoHistory.SetOperation',{id:'2.2', group:'ПРОРАБОТКА СПУСК', oper:'ПРОРАБОТКА', suboper:'при спуске', operclr:'#666633', suboperclr:'#CCCC33'});
			}		
		}
	} else {	
		if(hookDir > 0){
			if(diffWellPos >= 0 && diffWellPos < limitAboveBottomHole){	
				call('AutoHistory.SetOperation',{id:'3.3', group:'ШАБЛОНИРОВКА ПОДЪЕМ', oper:'ШАБЛОНИРОВКА',suboper:'при подъеме над забоем', operclr:'#CC6633', suboperclr:'#FF9933'});
			} else {
				call('AutoHistory.SetOperation',{id:'3.1', group:'ШАБЛОНИРОВКА ПОДЪЕМ', oper:'ШАБЛОНИРОВКА',suboper:'при подъеме', operclr:'#CC6633', suboperclr:'#FF9933'});
			}	
		} else {	
			if(diffWellPos >= 0 && diffWellPos < limitAboveBottomHole){
				call('AutoHistory.SetOperation',{id:'3.4', group:'ШАБЛОНИРОВКА СПУСК', oper:'ШАБЛОНИРОВКА',suboper:'при спуске над забоем', operclr:'#CC6633', suboperclr:'#FFCC00'});
			} else {
				call('AutoHistory.SetOperation',{id:'3.2', group:'ШАБЛОНИРОВКА СПУСК', oper:'ШАБЛОНИРОВКА',suboper:'при спуске', operclr:'#CC6633', suboperclr:'#FFCC00'});
			}
		}	
	}
	return;
}

if(isWeightOnHook && isCirc && !isDeepening && hookDir == 0){
	if(diffWellPos >= 0 && diffWellPos < limitBottomHole){
		call('AutoHistory.SetOperation',{id:'4.1', group:'ПРОМЫВКА', oper:'ПРОМЫВКА', suboper:'на забое', operclr:'#1583DC', suboperclr:'#4CA8C7'});
	} else if(diffWellPos > limitBottomHole && diffWellPos < limitAboveBottomHole){
		call('AutoHistory.SetOperation',{id:'4.2', group:'ПРОМЫВКА', oper:'ПРОМЫВКА', suboper:'над забоем', operclr:'#1583DC', suboperclr:'#026AD1'});
	} else {
		call('AutoHistory.SetOperation',{id:'4.3', group:'ПРОМЫВКА', oper:'ПРОМЫВКА', suboper:'в статике', operclr:'#1583DC', suboperclr:'#389CFF'});
	}
	return;
}
/*
if(isWeightOnHook && isCirc && !isRotation && !isDeepening && (hookDir > 0 || hookDir < 0)){
	if(hookDir == 2)	
		call('AutoHistory.SetOperation',{oper:'ШАБЛОНИРОВКА',suboper:'при подъеме', operclr:'#CC6633', suboperclr:'#FF9933'});
	else 	
		call('AutoHistory.SetOperation',{oper:'ШАБЛОНИРОВКА',suboper:'при спуске', operclr:'#CC6633', suboperclr:'#FFCC00'});
	return;
}
*/
//if(isWeightOnHook && !isCirc && !isRotation && !isDeepening && (hookDir == 2 || hookDir == -2)){
if(isWeightOnHook && !isCirc && !isRotation && !isDeepening && (hookDir > 0 || hookDir < 0)){
	var toolDir = call('AutoHistory.getToolDirection');

	switch(toolDir){
		case 0:  
			consolelog?console.log('Инструмент стоит'):'';
			break;
		case 1:
			consolelog?console.log("Инструмент движется вниз медленно"):'';
			break;
		case -1:
			consolelog?console.log("Инструмент движется вверх медленно"):'';
			break;
		case 2:
			consolelog?console.log("Инструмент движется вниз быстро"):'';
			break;
		case -2:
			consolelog?console.log("Инструмент движется вверх быстро"):'';
			break;	
	}		
	if(hookDir > 0){
		if(toolDir < 0){
			if(hookDir==2)
				call('AutoHistory.SetOperation',{id:'5.2', group:'СПО ПОДЪЕМ', oper:'СПО',suboper:'подъем',operclr:'#663333', suboperclr:'#A84660'});
			else	
				call('AutoHistory.SetOperation',{id:'5.5', group:'СПО ПОДЪЕМ', oper:'СПО',suboper:'медленный подъем',operclr:'#663333', suboperclr:'#302222'});
		} else if(toolDir > 0){
			call('AutoHistory.SetOperation',{id:'5.9', group:'СПО СПУСК', oper:'СПО',suboper:'быстрый спуск',operclr:'#B58F76', suboperclr:'#700404'});
		} else if(toolDir==0){
			if(hookDir == 1)
				call('AutoHistory.SetOperation',{id:'5.2', group:'СПО ПОДЪЕМ', oper:'СПО',suboper:'подъем',operclr:'#663333', suboperclr:'#A84660'});
			else if(hookDir == 2)
				call('AutoHistory.SetOperation',{id:'5.1', group:'СПО ПОДЪЕМ', oper:'СПО',suboper:'быстрый подъем',operclr:'#663333', suboperclr:'#B8252C'});
		}
		return; 
	} else if(hookDir < 0){
		if(toolDir > 0){
			if(hookDir==-2)
				call('AutoHistory.SetOperation',{id:'5.9', group:'СПО СПУСК', oper:'СПО',suboper:'быстрый спуск',operclr:'#B58F76', suboperclr:'#700404'});
			else if(hookDir==-1){	
				if(diffWellPos < limitBottomHole)				
					call('AutoHistory.SetOperation',{id:'5.13', group:'СПО СПУСК', oper:'СПО',suboper:'подведение к забою',operclr:'#B58F76', suboperclr:'#8F7171'});
				else	
					call('AutoHistory.SetOperation',{id:'5.13', group:'СПО СПУСК', oper:'СПО',suboper:'медленный спуск',operclr:'#B58F76', suboperclr:'#8F7171'});
			}
			return;	
		} if(toolDir < 0){
			call('AutoHistory.SetOperation',{id:'5.1', group:'СПО ПОДЪЕМ', oper:'СПО',suboper:'быстрый подъем',operclr:'#663333', suboperclr:'#B8252C'});
			return;
		} else if(toolDir==0){
			//var diffWellTool = call('AutoHistory.getDiffWellDepthAndToolPos');	
			consolelog?console.log('diffWellTool = ',diffWellPos):'';
			consolelog?console.log('WeightOnHookMQ.angle = ',WeightOnHookMQ.angle):'';
			consolelog?console.log('WeightOnHookMQ.avrVal = ',WeightOnHookMQ.avrVal):'';
			consolelog?console.log('WeightOnHookMQ.stopVal = ',WeightOnHookMQ.stopVal):'';
			//console.log('diffVal = ',retObj.diffVal);
			//console.log('tool speed = ',Math.floor(retObj.speedVal * 100) / 100, ' m/s ', Math.floor(retObj.speedVal*360000) / 100,' m/h');		
			//if(diffWellTool < 1 && WeightOnHookMQ.angle < -30/* && WeightOnHookMQ.stopVal < call('GetVarValue',{varname: 'AGENT.OBJECTS.Support.Auto.WeightOnHookMin'})*/){
//			if((diffWellPos < limitBottomHole && WeightOnHookMQ.angle < -30)||(diffWellPos < limitBottomHole && WeightOnHookMQ.stopVal < call('GetVarValue',{varname: 'AGENT.OBJECTS.Support.Auto.WeightOnHookMin'}))
			
			if((diffWellPos < limitBottomHole && WeightOnHookMQ.stopVal < weightOnHookMin && WeightOnHookMQ.angle < -30)
//			 ||(diffWellPos < limitBottomHole && WeightOnHookMQ.stopVal < weightOnHookMin)
				){
					if(CurOperJsonObj.oper == 'На клиньях')
						call('AutoHistory.SetOperation',CurOperJsonObj);
					else {
						call('AutoHistory.SetOperation',{id:'6.7', group:'КЛИНЬЯ', oper:'Постановка',suboper:'на клинья',operclr:'#663300', suboperclr:'#F5B06C'});	
					}
				return;
			}
			if((diffWellPos < limitBottomHole && WeightOnHookMQ.stopVal >= weightOnHookMin && WeightOnHookMQ.angle < -30)
				){
					if(CurOperJsonObj.oper == 'На клиньях')
						call('AutoHistory.SetOperation',CurOperJsonObj);
					else {
						call('AutoHistory.SetOperation',{id:'6.8', group:'КЛИНЬЯ', oper:'Снятие',suboper:'с клиньев',operclr:'#663300', suboperclr:'#F5B06C'});	
					}
				return;
			}
			
			if(hookDir == -1)
				call('AutoHistory.SetOperation',{id:'5.13', group:'СПО СПУСК', oper:'СПО',suboper:'медленный спуск',operclr:'#B58F76', suboperclr:'#8F7171'});
			else 
				call('AutoHistory.SetOperation',{id:'5.9', group:'СПО СПУСК', oper:'СПО', suboper:'быстрый спуск',operclr:'#B58F76', suboperclr:'#700404'});
			return;
		}
	} 
	return;
}


if(isWeightOnHook && !isCirc && !isRotation && !isDeepening && (hookDir == -1 || hookDir == 0)){
	consolelog?console.log('WeightOnHookMQ.angle = ',WeightOnHookMQ.angle):'';
	consolelog?console.log('WeightOnHookMQ.avrVal = ',WeightOnHookMQ.avrVal):'';
	consolelog?console.log('WeightOnHookMQ.stopVal = ',WeightOnHookMQ.stopVal):'';
	consolelog?console.log('WeightOnHookMQ.diffVal = ',WeightOnHookMQ.diffVal):'';
	if(WeightOnHookMQ.angle > 30){
		call('AutoHistory.SetOperation',{id:'6.8', group:'КЛИНЬЯ', oper:'Снятие',suboper:'с клиньев',operclr:'#663300', suboperclr:'#996E43'});
		return;
	}
}

//if(!isWeightOnHook && !isCirc && !isRotation && !isDeepening && (hookDir == -1 || hookDir == 0) && call('AutoHistory.getHookPos') < 1){
if(!isWeightOnHook && !isCirc && !isDeepening && (hookDir == -1 || hookDir == 0) && call('AutoHistory.getHookPos') < 1){
	consolelog?console.log('WeightOnHookMQ.angle = ',WeightOnHookMQ.angle):'';
	consolelog?console.log('WeightOnHookMQ.avrVal = ',WeightOnHookMQ.avrVal):'';
	consolelog?console.log('WeightOnHookMQ.stopVal = ',WeightOnHookMQ.stopVal):'';
	consolelog?console.log('WeightOnHookMQ.diffVal = ',WeightOnHookMQ.diffVal):'';
	if(WeightOnHookMQ.angle < -20){
		call('AutoHistory.SetOperation',{id:'6.7', group:'КЛИНЬЯ', oper:'Постановка',suboper:'на клинья',operclr:'#663300', suboperclr:'#F5B06C'});
		return;
	}
}

if(isWeightOnHook && isCirc && !isDeepening && hookDir == -1){
//	var diffWellPos = call('AutoHistory.getDiffWellDepthAndToolPos');
//	var toolPos = call('AutoHistory.getToolPos');
//	var wellDepth = call('AutoHistory.getWellDepth');
//	console.log('Tool Posit ', toolPos);
//	console.log('Well Depth ', wellDepth);	
	if(diffWellPos < limitAboveBottomHole && diffWellPos > limitBottomHole){
		call('AutoHistory.SetOperation',{id:'4.4', group:'ПРОМЫВКА', oper: 'ПРОМЫВКА',suboper:'подведение к забою', operclr:'#1583DC', suboperclr:'#0251A1'});
		return;
	} else if(diffWellPos >= 0 && diffWellPos > limitBottomHole){
		call('AutoHistory.SetOperation',{id:'4.1', group:'ПРОМЫВКА', oper: 'ПРОМЫВКА',suboper:'на забое', operclr:'#1583DC', suboperclr:'#4CA8C7'});
		return;
	}
}

if(isWeightOnHook && isCirc && isDeepening && hookDir < 0){
	if(isRotation)
		call('AutoHistory.SetOperation',{id:'1.1', group:'БУРЕНИЕ РОТОРОМ', oper: 'БУРЕНИЕ', suboper:'ротором',operclr:'#1EE661', suboperclr:'#009933'});
	else
		call('AutoHistory.SetOperation',{id:'1.2', group:'БУРЕНИЕ СЛАЙДОМ', oper: 'БУРЕНИЕ', suboper:'слайдом', operclr:'#1EE661', suboperclr:'#33CC66'});	
	return;
}
if(isWeightOnHook && isCirc && isDeepening && hookDir == 1 && diffWellPos < limitBottomHole){
	if(isRotation){
		call('AutoHistory.SetOperation',{id:'5.7', group:'СПО', oper:'СПО ПОДЪЕМ', suboper:'медленный подъем от забоя с циркуляцией c вращением', operclr: '#663333', suboperclr:'#9E8E8E'});
	} else {
		call('AutoHistory.SetOperation',{id:'5.8', group:'СПО', oper:'СПО ПОДЪЕМ', suboper:'медленный подъем от забоя с циркуляцией без вращения', operclr: '#663333', suboperclr:'#9E8E8E'});
	}	
	
	//call('AutoHistory.SetOperation',{id:'5.8', group:'СПО', oper:'СПО ПОДЪЕМ', suboper:'медленный подъем от забоя с циркуляцией без вращения', operclr: '#663333', suboperclr:'#9E8E8E'});	
	return;
}

if(isWeightOnHook && !isCirc && isRotation && !isDeepening && hookDir > 0){
	if(diffWellPos >= 0 && diffWellPos < limitBottomHole){
		if(hookDir == 1)
			call('AutoHistory.SetOperation',{id:'5.7', group:'СПО ПОДЪЕМ', oper:'СПО', suboper:'медленный подъем от забоя с вращением', operclr: '#663333', suboperclr:'#9E8E8E'});
		else 
			call('AutoHistory.SetOperation',{id:'5.4', group:'СПО ПОДЪЕМ', oper:'СПО', suboper:'подъем от забоя с вращением', operclr: '#663333', suboperclr:'#FFC4C4'});
		return;
	} else if(diffWellPos >= limitBottomHole){
		if(hookDir == 1)
			call('AutoHistory.SetOperation',{id:'5.6', group:'СПО ПОДЪЕМ', oper:'СПО', suboper:'медленный подъем с вращением', operclr: '#663333', suboperclr:'#A6400A'});
		else
			call('AutoHistory.SetOperation',{id:'5.3', group:'СПО ПОДЪЕМ', oper:'СПО', suboper:'подъем с вращением', operclr: '#663333', suboperclr:'#CF4B3A'});	
		return;
	}
}

if(isWeightOnHook && !isCirc && isRotation && !isDeepening && hookDir < 0){
	if(diffWellPos < limitAboveBottomHole){
		if(hookDir == -1)
			call('AutoHistory.SetOperation',{id:'5.15', group:'СПО СПУСК', oper:'СПО', suboper:'медленный спуск к забою с вращением', operclr: '#B58F76', suboperclr:'#9C5959'});
		else 
			call('AutoHistory.SetOperation',{id:'5.12', group:'СПО СПУСК', oper:'СПО', suboper:'быстрый спуск к забою с вращением', operclr: '#B58F76', suboperclr:'#CCB3B3'});
		return;
	} else if(diffWellPos >= limitAboveBottomHole){
		if(hookDir == -1)
			call('AutoHistory.SetOperation',{id:'5.14', group:'СПО СПУСК', oper:'СПО', suboper:'медленный спуск с вращением', operclr: '#B58F76', suboperclr:'#CF8F8F'});
		else
			call('AutoHistory.SetOperation',{id:'5.11', group:'СПО СПУСК', oper:'СПО', suboper:'быстрый спуск с вращением', operclr: '#B58F76', suboperclr:'#D16B6B'});	
		return;
	}
}

if(isWeightOnHook && !isCirc && !isDeepening && hookDir == 0){
	if(isRotation){
		if(diffWellPos < limitBottomHole){
			call('AutoHistory.SetOperation',{id:'7.6', group:'ОСТАНОВКА', oper:'Остановка', suboper:'на забое без циркуляции с вращением', operclr: '#37BABF', suboperclr:'#CFFFF1'});
		} else if(diffWellPos >= limitBottomHole && diffWellPos < limitAboveBottomHole){
			call('AutoHistory.SetOperation',{id:'7.5', group:'ОСТАНОВКА', oper:'Остановка', suboper:'над забоем без циркуляции с вращением', operclr: '#37BABF', suboperclr:'#DEFFB0'});	
		} else {
			call('AutoHistory.SetOperation',{id:'7.4', group:'ОСТАНОВКА', oper:'Остановка', suboper:'без циркуляции с вращением', operclr: '#37BABF', suboperclr:'#A6FFAC'});
		}
	} else {
		if(diffWellPos < limitBottomHole){	
			call('AutoHistory.SetOperation',{id:'7.3', group:'ОСТАНОВКА', oper:'Остановка ', suboper:'на забое без циркуляции без вращения', operclr: '#37BABF', suboperclr:'#76DEBB'});
		} else if(diffWellPos >= limitBottomHole && diffWellPos < limitAboveBottomHole){
			call('AutoHistory.SetOperation',{id:'7.2', group:'ОСТАНОВКА', oper:'Остановка', suboper:'над забоем без циркуляции без вращения', operclr: '#37BABF', suboperclr:'#73FFC2'});
		} else {
			call('AutoHistory.SetOperation',{id:'7.1', group:'ОСТАНОВКА', oper:'Остановка', suboper:'без циркуляции без вращения', operclr: '#37BABF', suboperclr:'#ABFFC8'});
		}
	}
	return;
}


call('AutoHistory.SetOperation',{id:'8.1', group:'НЕОПРЕДЕЛЕННЫЙ', oper:'Неопределенный',operclr: '#A8A890', suboperclr:'#A8A890'});

/*
//Halliburton//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var HalliMD = new UaNode('AGENT.OBJECTS.Support.Halliburton.MD');
var HalliMeasuredWeightTripIn = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightTripIn');
var HalliMeasuredWeightTripOut = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightTripOut');
var HalliMeasuredWeightOffBottom = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightOffBottom');
var HalliMeasuredWeightSlide = new UaNode('AGENT.OBJECTS.Support.Halliburton.MeasuredWeightSlide');
var HalliTorqueOnBottom = new UaNode('AGENT.OBJECTS.Support.Halliburton.TorqueOnBottom');
var HalliTorqueOffBottom = new UaNode('AGENT.OBJECTS.Support.Halliburton.TorqueOffBottom');
var HalliPressure = new UaNode('AGENT.OBJECTS.Support.Halliburton.Pressure');
var HalliECD = new UaNode('AGENT.OBJECTS.Support.Halliburton.ECD');

HalliMD.assign({value: toolPos});
var CurOperJsonObj = JSON.parse(call('AutoHistory.GetOperationObj').value);
var RotorTorque = new UaNode('AGENT.OBJECTS.IVE50.Tool.RotorTorque');
if(CurOperJsonObj.oper == 'БУРЕНИЕ' && CurOperJsonObj.suboper == 'ротором'){	
	HalliTorqueOffBottom.assign({value: RotorTorque.value});
} else {
	HalliTorqueOffBottom.assign({value: 0});
}
if(isWeightOnHook){
	var CurrWeightOnHook = call('AutoHistory.getWeightOnHook');
	if(CurOperJsonObj.oper == 'БУРЕНИЕ' && CurOperJsonObj.suboper == 'слайдом'){	
		HalliMeasuredWeightTripIn.assign({value: 0});
		HalliMeasuredWeightTripOut.assign({value: 0});
		HalliMeasuredWeightOffBottom.assign({value: 0});
		HalliMeasuredWeightSlide.assign({value:CurrWeightOnHook});
	} else {
		if(diffWellPos >= limitBottomHole){	
			if(hookDir < 0){
				HalliMeasuredWeightTripIn.assign({value:CurrWeightOnHook});
				HalliMeasuredWeightTripOut.assign({value: 0});
				HalliMeasuredWeightOffBottom.assign({value: 0});
				HalliMeasuredWeightSlide.assign({value: 0});
			} else if(hookDir > 0){
				HalliMeasuredWeightTripIn.assign({value: 0});
				HalliMeasuredWeightTripOut.assign({value:CurrWeightOnHook});
				HalliMeasuredWeightOffBottom.assign({value: 0});
				HalliMeasuredWeightSlide.assign({value: 0});
			} else if(hookDir == 0){
				HalliMeasuredWeightTripIn.assign({value: 0});
				HalliMeasuredWeightTripOut.assign({value: 0});
				HalliMeasuredWeightOffBottom.assign({value:CurrWeightOnHook});
				HalliMeasuredWeightSlide.assign({value: 0});
			}
		} else {
			HalliMeasuredWeightTripIn.assign({value: 0});
			HalliMeasuredWeightTripOut.assign({value: 0});
			HalliMeasuredWeightOffBottom.assign({value: 0});
			HalliMeasuredWeightSlide.assign({value: 0});
		}
	}
	HalliPressure.assign({value: call('AutoHistory.getPressureManifold')});
	HalliECD.assign({value: 0});
}
var HalliObj = {};
HalliObj.MD = HalliMD.value;
HalliObj.MeasuredWeightTripIn = HalliMeasuredWeightTripIn.value;
HalliObj.MeasuredWeightTripOut = HalliMeasuredWeightTripOut.value;
HalliObj.MeasuredWeightOffBottom = HalliMeasuredWeightOffBottom.value;
HalliObj.MeasuredWeightSlide = HalliMeasuredWeightSlide.value;
HalliObj.TorqueOnBottom = HalliTorqueOnBottom.value;
HalliObj.TorqueOffBottom = HalliTorqueOffBottom.value;
HalliObj.Pressure = HalliPressure.value;
HalliObj.ECD = HalliECD.value;

var HalliJson = JSON.stringify(HalliObj);
var nodeHalliJson = new UaNode('AGENT.OBJECTS.Rig.Halliburton.HalliJson');
nodeHalliJson.assign(HalliJson);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
return;]]></code>
</script>
