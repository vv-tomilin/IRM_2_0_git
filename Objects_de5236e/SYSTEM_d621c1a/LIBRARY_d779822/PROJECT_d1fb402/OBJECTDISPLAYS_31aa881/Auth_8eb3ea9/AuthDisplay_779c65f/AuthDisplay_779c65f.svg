<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="400" version="1.2" width="600" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:parameter behavior="optional" defaultvalue="AGENT.DISPLAYS.NewView.IRM2_2_0.main_irm2_0" name="targetDisplay" valuetype="display"/>
  <atv:gridconfig enabled="true" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <g atv:insensitive="true" atv:refpx="0" atv:refpy="0" id="id_10">
  <rect atv:refpx="300" atv:refpy="200" fill="#000000" height="400.00" id="id_11" width="600.00" x="0" y="0"/>
 </g>
 <foreignObject height="169.931" id="authorization_form" width="317.204" x="141.398" y="208.518">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml">
   <form class="auth-form" id="auth_form">
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_username" placeholder=" " tabindex="1" type="text"/>
      <label class="label-wrapper" for="auth_window_input_username">
       <span class="Hint-text">username</span>
      </label>
     </div>
    </div>
    <div class="input-component">
     <div class="Rectangle-7">
      <input class="input" id="input_password" placeholder=" " tabindex="2" type="password"/>
      <label class="label-wrapper" for="auth_window_input_password">
       <span class="Hint-text">password</span>
      </label>
     </div>
    </div>
    <div class="choice-menu__body" style="justify-content:space-between;width:100%;">
     <div style="display:flex;justify-content:center;width:100%;">
      <button class="button-blue" id="ok_button" tabindex="3" type="button" value="submit">Вход</button>
     </div>
    </div>
   </form>
  </div>
 </foreignObject>
 <text atv:refpx="307.5" atv:refpy="178.955" fill="#f30000" font-family="Arial" font-size="18" id="error_text" x="159.5" y="186.455">Неправильные логин или пароль</text>
 <svg atv:refpx="300" atv:refpy="72.924" height="127" id="id_3" width="278" x="161" xlink:href="SYSTEM.LIBRARY.PROJECT.RESOURCES%2Flogo_vhod.svg" y="25.424"/>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[webMI.libraryLoader.load([], ["CSS/main.css"], function(e) {
var username = "";
var password = "";
var display = (webMI.query["targetDisplay"] == undefined) ? "" : webMI.query["targetDisplay"];
var errorText = document.getElementById("error_text");

var form = document.getElementById("auth_form");

var tabList = form.querySelectorAll("[tabindex]");
var inputs = [document.getElementById("input_username"), document.getElementById("input_password")];

webMI.gfx.setVisible(errorText, false);

function addListeners(elems) {
	for (i in elems) {
		elems[i].addEventListener('keydown', function(f) {
			if (f.srcElement.getAttribute('readonly') != 'true') {
				if (f.key == 'Backspace') {
					var start = f.srcElement.selectionStart;
					var end =  f.srcElement.selectionEnd;
					var temp = f.srcElement.value.split("");
					if (end != start) {
						temp.splice(start, (end - start));
						f.srcElement.value = temp.join("");
						f.srcElement.selectionStart = start;
						f.srcElement.selectionEnd = start;
						
					} else {
						temp.splice(start - 1, 1);
						f.srcElement.value = temp.join("");
						f.srcElement.selectionStart = start - 1;
						f.srcElement.selectionEnd = start - 1;
						
					}
				}
				if (f.key == 'Enter') {
					//!document.getElementById("table__input-form").dispatchEvent(evt);
					//console.log("212");
					//!f.srcElement.dispatchEvent(evt);
					tabList[f.srcElement.tabIndex].focus();
					if (f.srcElement.tabIndex == 2) submit();
				}
				if (f.key == 'Tab') {
					//console.log('tab')
					tabList[f.srcElement.tabIndex].focus();
									
				}
				if (f.target.id.includes("input_username")){
					username = f.target.value;
					
				}
				if (f.target.id.includes("input_password")) {
					//cancel();
					password = f.target.value;
				}
			}
		})
	}
}
addListeners(inputs);

function submit() {
	webMI.data.login(username, password, function(e) {
		if (e[""].hasOwnProperty("username") && e[""].username){
			console.log("success");
			//webMI.display.closeWindow();
			//webMI.data.write(["AGENT.OBJECTS.Auth.isLogged", "AGENT.OBJECTS.Auth.currentLogin", "AGENT.OBJECTS.Auth.currentPassword"], [true, username, password]);
			var timestamp = new Date().getTime();
			var session = Date.now().toString(36) + Math.random().toString(36).substr(2);
			var path = "AGENT.OBJECTS.Auth.sessions";
			var authObject = {
				password: password,
				username: username,
				timestamp: timestamp,
				session: session
			};
			
			localStorage.setItem("session", btoa(authObject.session + "-" + authObject.timestamp));
			webMI.data.write(path, JSON.stringify(authObject));
			webMI.display.openDisplay(display, {});
			//console.log(webMI.display)
		} else if (e[""].hasOwnProperty("username")) {
			console.log("error");
			//webMI.gfx.setText("status_message", "T{Login failed! Username/password wrong.}");
			webMI.gfx.setVisible(errorText, true);
		} else if (e[""].hasOwnProperty("error")) {
			console.log("error");
			//webMI.gfx.setText("status_message", "T{Login failed! Username/password wrong.}");
			webMI.gfx.setVisible(errorText, true);
		} else {
			//webMI.display.closeWindow();
			webMI.gfx.setVisible(errorText, true);
		}
		console.log(e)
	});
}

function cancel() {
	// do something
	webMI.display.closeWindow();
}

form.addEventListener("click", function(e) {
	if (e.target.id.includes("ok_button")){
		submit();
		
	}
	if (e.target.id.includes("cancel_button")) {
		cancel();
	} 
})
form.addEventListener("keydown", function(e) {
	if (e.target.id.includes("ok_button") && e.key == 'Enter'){
		submit();
		
	}
	if (e.target.id.includes("cancel_button")) {
		cancel();
	} 
})
form.addEventListener("change", function(e) {
	if (e.target.id.includes("input_username")){
		username = e.target.value;
		
	}
	if (e.target.id.includes("input_password")) {
		//cancel();
		password = e.target.value;
	}
})
})]]></script>
</svg>
