<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="141" version="1.2" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns="http://www.w3.org/2000/svg" height="30" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <desc>Start/stop live mode and enable measurement cursors</desc>
 <title>Toolbar</title>
 <metadata>
  <atv:parameter name="chartname" behavior="mandatory" desc="chart name" defaultvalue="trend1" valuetype="string"/>
  <atv:parameter name="showLiveBtn" group="Appearance" behavior="optional" desc="enable live button" defaultvalue="true" valuetype="bool"/>
  <atv:parameter name="showMarker1" group="Appearance" behavior="optional" desc="enable marker 1" defaultvalue="false" valuetype="bool"/>
  <atv:parameter name="showMarker2" group="Appearance" behavior="optional" desc="enable marker 2" defaultvalue="false" valuetype="bool"/>
  <atv:parameter name="showOptionsBtn" group="Appearance" behavior="optional" desc="enable options button" defaultvalue="false" valuetype="bool"/>
  <atv:parameter name="lineColor" group="Appearance" behavior="optional" desc="line color" defaultvalue="SYSTEM.GLOBALS.atvBorderColor" substitute="$LINECOLOR$" valuetype="global"/>
  <atv:parameter name="optionsBtnMode" group="Options" behavior="mandatory" desc="mode for options button" defaultvalue="popup" config="pop-up;trigger;frame" valuetype="enum"/>
  <atv:parameter name="triggerName" group="Options" behavior="optional" desc="trigger name" defaultvalue="com.atvise.highchart_options" valuetype="string"/>
  <atv:parameter name="targetFrame" group="Options" behavior="optional" desc="target frame" defaultvalue="chartframe" valuetype="string"/>
  <atv:parameter name="options_right" group="Security: options menu" behavior="optional" desc="necessary right" defaultvalue="" config="SYSTEM.SECURITY.RIGHTS" valuetype="address"/>
  <atv:parameter name="options_activeNode" group="Security: options menu" behavior="optional" desc="activation address" valuetype="address"/>
  <atv:parameter name="options_activeValue" group="Security: options menu" behavior="optional" desc="activation value" valuetype="string"/>
  <atv:parameter name="load_right" group="Security: load configuration" behavior="optional" desc="necessary right" defaultvalue="" config="SYSTEM.SECURITY.RIGHTS" valuetype="address"/>
  <atv:parameter name="load_activeNode" group="Security: load configuration" behavior="optional" desc="activation address" valuetype="address"/>
  <atv:parameter name="load_activeValue" group="Security: load configuration" behavior="optional" desc="activation value" valuetype="string"/>
  <atv:parameter name="save_right" group="Security: save configuration" behavior="optional" desc="necessary right" defaultvalue="" config="SYSTEM.SECURITY.RIGHTS" valuetype="address"/>
  <atv:parameter name="save_activeNode" group="Security: save configuration" behavior="optional" desc="activation address" valuetype="address"/>
  <atv:parameter name="save_activeValue" group="Security: save configuration" behavior="optional" desc="activation value" valuetype="string"/>
  <atv:parameter name="export_right" group="Security: export menu" behavior="optional" desc="necessary right for export" defaultvalue="" config="SYSTEM.SECURITY.RIGHTS" valuetype="address"/>
  <atv:parameter name="export_activeNode" group="Security: export menu" behavior="optional" desc="activation address" valuetype="address"/>
  <atv:parameter name="export_activeValue" group="Security: export menu" behavior="optional" desc="activation value" valuetype="string"/>
  <atv:gridconfig width="20" enabled="true" gridstyle="lines" height="20"/>
  <atv:snapconfig width="1" enabled="true" height="1"/>
 </metadata>
 <svg y="0" id="btn_live" transform="matrix(0.375,0,0,1,0,0)" width="80" atv:refpy="15" atv:refpx="15" height="30" x="0" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.button">
  <atv:argument name="label" value="T{Start}"/>
  <atv:argument name="visibilityLabel" value="hidden"/>
  <atv:argument name="visibilitySymbol" value="inherit"/>
  <atv:argument name="symbol" value="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.play"/>
  <atv:argument name="tabIndex" value="1"/>
  <atv:overwrite id="id_2" transform="matrix(2.6667,0,0,1,0,0)" width="24.5"/>
  <atv:overwrite id="id_0" transform="matrix(2.6667,0,0,1,0,0)" width="29.5"/>
  <atv:overwrite id="id_6" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="button_symbol" transform="matrix(2.6667,0,0,1,0,0)" x="5"/>
  <atv:overwrite id="button_label" transform="matrix(2.6667,0,0,1,0,0)" x="15"/>
  <atv:overwrite id="button_stroke" transform="matrix(2.6667,0,0,1,0,0)" width="26"/>
  <atv:overwrite id="button_bg" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="outer_frame" transform="matrix(2.6667,0,0,1,0,0)" width="30"/>
 </svg>
 <svg y="0" id="btn_stop" transform="matrix(0.375,0,0,1,0,0)" width="80" atv:refpy="15" atv:refpx="15" height="30" x="0" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.button">
  <atv:argument name="label" value="T{Stop}"/>
  <atv:argument name="visibilityLabel" value="hidden"/>
  <atv:argument name="visibilitySymbol" value="inherit"/>
  <atv:argument name="symbol" value="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.stop"/>
  <atv:argument name="tabIndex" value="1"/>
  <atv:overwrite id="id_2" transform="matrix(2.6667,0,0,1,0,0)" width="24.5"/>
  <atv:overwrite id="id_0" transform="matrix(2.6667,0,0,1,0,0)" width="29.5"/>
  <atv:overwrite id="id_6" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="button_symbol" transform="matrix(2.6667,0,0,1,0,0)" x="5"/>
  <atv:overwrite id="button_label" transform="matrix(2.6667,0,0,1,0,0)" x="15"/>
  <atv:overwrite id="button_stroke" transform="matrix(2.6667,0,0,1,0,0)" width="26"/>
  <atv:overwrite id="button_bg" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="outer_frame" transform="matrix(2.6667,0,0,1,0,0)" width="30"/>
 </svg>
 <svg y="0" id="btn_marker1" transform="matrix(0.375,0,0,1,0,0)" width="80" atv:refpy="15" atv:refpx="58.125" height="30" x="106.667" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.button">
  <atv:argument name="label" value="T{Marker 1}"/>
  <atv:argument name="symbol" value="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.marker1"/>
  <atv:argument name="visibilitySymbol" value="inherit"/>
  <atv:argument name="visibilityLabel" value="hidden"/>
  <atv:argument name="tabIndex" value="2"/>
  <atv:overwrite id="id_2" transform="matrix(2.6667,0,0,1,0,0)" width="24.5"/>
  <atv:overwrite id="id_0" transform="matrix(2.6667,0,0,1,0,0)" width="29.5"/>
  <atv:overwrite id="id_6" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="button_symbol" transform="matrix(2.6667,0,0,1,0,0)" x="5"/>
  <atv:overwrite id="button_label" transform="matrix(2.6667,0,0,1,0,0)" x="15"/>
  <atv:overwrite id="button_stroke" transform="matrix(2.6667,0,0,1,0,0)" width="26"/>
  <atv:overwrite id="button_bg" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="outer_frame" transform="matrix(2.6667,0,0,1,0,0)" width="30"/>
 </svg>
 <svg y="0" id="btn_marker2" transform="matrix(0.375,0,0,1,0,0)" width="80" atv:refpy="15" atv:refpx="91.75" height="30" x="189.334" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.button">
  <atv:argument name="label" value="T{Marker 2}"/>
  <atv:argument name="symbol" value="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.marker2"/>
  <atv:argument name="visibilitySymbol" value="inherit"/>
  <atv:argument name="visibilityLabel" value="hidden"/>
  <atv:argument name="tabIndex" value="3"/>
  <atv:overwrite id="id_2" transform="matrix(2.6667,0,0,1,0,0)" width="24.5"/>
  <atv:overwrite id="id_0" transform="matrix(2.6667,0,0,1,0,0)" width="29.5"/>
  <atv:overwrite id="id_6" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="button_symbol" transform="matrix(2.6667,0,0,1,0,0)" x="5"/>
  <atv:overwrite id="button_label" transform="matrix(2.6667,0,0,1,0,0)" x="15"/>
  <atv:overwrite id="button_stroke" transform="matrix(2.6667,0,0,1,0,0)" width="26"/>
  <atv:overwrite id="button_bg" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="outer_frame" transform="matrix(2.6667,0,0,1,0,0)" width="30"/>
 </svg>
 <line id="line1" x1="35" stroke-width="1" stroke-linecap="square" y2="25.513" atv:refpy="15.129" atv:refpx="40.115" stroke="$LINECOLOR$" y1="5.513" x2="35"/>
 <line id="line2" x1="106" stroke-width="1" stroke-linecap="square" y2="25" atv:refpy="14.616" atv:refpx="109.115" stroke="$LINECOLOR$" y1="5" x2="106"/>
 <svg y="0" id="btn_options" transform="matrix(0.375,0,0,1,0,0)" width="80" atv:refpy="15" atv:refpx="123" height="30" x="296" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.button">
  <atv:argument name="label" value="T{Options}"/>
  <atv:argument name="fontSize" value="8"/>
  <atv:argument name="visibilitySymbol" value="inherit"/>
  <atv:argument name="visibilityLabel" value="hidden"/>
  <atv:argument name="symbol" value="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.20x20.gears"/>
  <atv:argument prefix="options_right" name="right"/>
  <atv:argument prefix="options_activeNode" name="activeNode"/>
  <atv:argument prefix="options_activeValue" name="activeValue"/>
  <atv:overwrite id="id_2" transform="matrix(2.6667,0,0,1,0,0)" width="24.5"/>
  <atv:overwrite id="id_0" transform="matrix(2.6667,0,0,1,0,0)" width="29.5"/>
  <atv:overwrite id="id_6" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="button_symbol" transform="matrix(2.6667,0,0,1,0,0)" x="5"/>
  <atv:overwrite id="button_label" transform="matrix(2.6667,0,0,1,0,0)" x="15"/>
  <atv:overwrite id="button_stroke" transform="matrix(2.6667,0,0,1,0,0)" width="26"/>
  <atv:overwrite id="button_bg" transform="matrix(2.6667,0,0,1,0,0)" width="28"/>
  <atv:overwrite id="outer_frame" transform="matrix(2.6667,0,0,1,0,0)" width="30"/>
 </svg>
 <script type="text/ecmascript"><![CDATA[//var chartname = webMI.query.chartname;
//var chart, chartUpdate;
//var chartUpdate = [];
//var isLiveMode = false;

//Check button visibility and position
var xCorr = 0;

if (webMI.query.showLiveBtn != "true") {
	webMI.gfx.setVisible("btn_live",false)
	webMI.gfx.setVisible("btn_stop",false)
	webMI.gfx.setVisible("line1",false)
	xCorr += 40;
	webMI.gfx.setMoveX("btn_marker1", -xCorr)
	webMI.gfx.setMoveX("btn_marker2", -xCorr)
	webMI.gfx.setMoveX("line2", -xCorr)
	webMI.gfx.setMoveX("btn_options", -xCorr)
}

if (webMI.query.showMarker1 != "true") {
	webMI.gfx.setVisible("btn_marker1",false)
	xCorr += 31;
	webMI.gfx.setMoveX("btn_marker2", -xCorr)
	webMI.gfx.setMoveX("line2", -xCorr)
	webMI.gfx.setMoveX("btn_options", -xCorr)
}

if (webMI.query.showMarker2 != "true") {
	webMI.gfx.setVisible("btn_marker2",false)
	xCorr += 31;
	webMI.gfx.setMoveX("line2", -xCorr)
	webMI.gfx.setMoveX("btn_options", -xCorr)
}

if (webMI.query.showMarker1 != "true" && webMI.query.showMarker2 != "true") {
	webMI.gfx.setVisible("line1",false)
	xCorr += 8;
	webMI.gfx.setMoveX("line2", -xCorr)
	webMI.gfx.setMoveX("btn_options", -xCorr)
}

if (webMI.query.showOptionsBtn != "true") {
	webMI.gfx.setVisible("btn_options",false)
	webMI.gfx.setVisible("line2",false)
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Live/Stop button
webMI.trigger.connect("clicked", function(e) {
//	if (!chart)
//		return;
		
		
/*		
	var oneminmilliseconds = 600000;
	
	var extremes = chart.chart.xAxis[activeAxis].getExtremes();
				
	chart.chart.xAxis[activeAxis].setExtremes(extremes.min, extremes.min+oneminmilliseconds);
	chart.chart.xAxis[activeAxis].options.min = extremes.min;
	chart.chart.xAxis[activeAxis].options.max = extremes.min+oneminmilliseconds;	
	
//	chart.chart.redraw();	
*/	
//	isLiveMode=true;
	setLiveStopButton(true);
	var allcharts = webMI.trendFactory.getAllTrends();
	allcharts.forEach(function(chart, i, arr) {
		if (chart.chart.options.atviseOptions.mode == "history"){ 
			chart.chart.options.atviseOptions.mode = "mixed";
		}
		chart.control.startLiveMode();
		chart.control.updated();
	});
	
/*		
	if (chart.chart.options.atviseOptions.mode == "history"){ 
		chart.chart.options.atviseOptions.mode = "mixed";
	}
	chart.control.startLiveMode();	
*/	
//	chart.control.updated(function(){
//		console.log("btn_live updated");
/*		var oneminmilliseconds = 600000;
	
		var extremes = chart.chart.xAxis[activeAxis].getExtremes();
		
		chart.chart.xAxis[activeAxis].setExtremes(extremes.min, extremes.min+oneminmilliseconds);
		chart.chart.xAxis[activeAxis].options.min = extremes.min;
		chart.chart.xAxis[activeAxis].options.max = extremes.min+oneminmilliseconds;
*/		
//	});
	
}, "btn_live");

webMI.trigger.connect("clicked", function(e) {
//	if (!chart)
//		return;
		
//	isLiveMode = false;

	webMI.trigger.fire("stopCharts",'');	
/*	
	setLiveStopButton(false);	
	var allcharts = webMI.trendFactory.getAllTrends();
	allcharts.forEach(function(chart, i, arr) {
		//if (item.control.isLiveModeRunning()) item.control.stopLiveMode();
		chart.control.stopLiveMode();
		//var oldMode = item.chart.options.atviseOptions.mode;
		chart.control.setMode("history");
		//item.chart.xAxis[activeAxis].zoomEnabled = true;
//			chart.control.updated(function() {
//			chart.control.setMode(oldMode);
//		});
	});
*/		
//	chart.chart.options.atviseOptions.mode = "history";
//	chart.control.stopLiveMode();

/*	chart.control.stopLiveMode(function(){
		chart.chart.options.atviseOptions.mode = "history";
	});
*/	
	
//	chart.control.updated(function(){
//		console.log("btn_stop updated");
/*		
		var allcharts = webMI.trendFactory.getAllTrends();
		allcharts.forEach(function(item, i, arr) {
			//if (item.control.isLiveModeRunning()) item.control.stopLiveMode();
			item.control.stopLiveMode();
			//var oldMode = item.chart.options.atviseOptions.mode;
			item.control.setMode("history");
//				chart.control.updated(function() {
//				chart.control.setMode(oldMode);
//			});
		});
*/		
//	});
	

}, "btn_stop");


function setLiveStopButton(liveMode) {
/*	if(liveMode){
		webMI.gfx.setVisible("btn_live",true)
		webMI.gfx.setVisible("btn_stop",false)		
	} else {
		webMI.gfx.setVisible("btn_live",false)
		webMI.gfx.setVisible("btn_stop",true)
	}
*/	

	if(liveMode){
		webMI.gfx.setVisible("btn_live",false)
		webMI.gfx.setVisible("btn_stop",true)
	} else {
		webMI.gfx.setVisible("btn_live",true)
		webMI.gfx.setVisible("btn_stop",false)
	}
	
/*	
	if (chart.control.isLiveModeRunning()) {
		webMI.gfx.setVisible("btn_live",false)
		//webMI.gfx.setMoveX("btn_stop",0);
		webMI.gfx.setVisible("btn_stop",true)
	} else {
		webMI.gfx.setVisible("btn_live",true)
		webMI.gfx.setVisible("btn_stop",false)
		//webMI.gfx.setMoveX("btn_stop",-30);
	}
*/	
}

function checkChart() {

	var allcharts = webMI.trendFactory.getAllTrends();
	if(allcharts.length == 0){
		setTimeout(function() {checkChart()}, 500);
	}	
	
	allcharts.forEach(function(chart, i, arr) {
		chart.control.startLiveMode();
		chart.control.setMode("mixed");
	});
	setLiveStopButton(true);
}

webMI.trigger.connect("stopCharts", function(e) {
	var allcharts = webMI.trendFactory.getAllTrends();
//	if(allcharts.length == 0){
//		setTimeout(function() {stopChart()}, 500);
//	}
	
	allcharts.forEach(function(chart, i, arr) {
		chart.control.stopLiveMode();
		//var oldMode = item.chart.options.atviseOptions.mode;
		chart.control.setMode("history");
		chart.control.updated();
	});

	setLiveStopButton(false);
});

/*
function stopCharts() {

	var allcharts = webMI.trendFactory.getAllTrends();
	if(allcharts.length == 0){
		setTimeout(function() {stopChart()}, 500);
	}
	
	allcharts.forEach(function(chart, i, arr) {
		chart.control.stopLiveMode();
		//var oldMode = item.chart.options.atviseOptions.mode;
		chart.control.setMode("history");
	});

	setLiveStopButton(false);

//	chartUpdate = chart.control.registerOnUpdatedCallback(function() {
//		setLiveStopButton();
//	});
}
*/
webMI.addOnload(function() {
	checkChart();
});


webMI.addOnunload(function() {
	webMI.trigger.fire("stopCharts",'');
//	stopCharts();
/*
	var allcharts = webMI.trendFactory.getAllTrends();
	allcharts.forEach(function(chart, i, arr) {
		if (chart && chart.control) chart.control.unregisterOnUpdatedCallback(chartUpdate[chart]);
	});
*/	
});



/*
function setLiveStopButton() {
	if (chart.control.isLiveModeRunning()) {
		webMI.gfx.setVisible("btn_live",false)
		//webMI.gfx.setMoveX("btn_stop",0);
		webMI.gfx.setVisible("btn_stop",true)
	} else {
		webMI.gfx.setVisible("btn_live",true)
		webMI.gfx.setVisible("btn_stop",false)
		//webMI.gfx.setMoveX("btn_stop",-30);
	}
}

function checkChart() {
	chart = webMI.trendFactory.getTrendByName(chartname);

	if (!chart) {
		setTimeout(function() {checkChart()}, 500);
		return;
	}

	setLiveStopButton();

	chartUpdate = chart.control.registerOnUpdatedCallback(function() {
		setLiveStopButton();
	});
}

webMI.addOnload(function() {
	checkChart();
});

webMI.addOnunload(function() {
	if (chart && chart.control) chart.control.unregisterOnUpdatedCallback(chartUpdate);
});
*/

/*
webMI.trigger.connect("clicked", function(e) {
	if (!chart)
		return;

	if (chart.chart.options.atviseOptions.mode == "history") 
		chart.chart.options.atviseOptions.mode = "mixed";

	chart.control.startLiveMode();
}, "btn_live");

webMI.trigger.connect("clicked", function(e) {
	if (!chart)
		return;

	chart.control.stopLiveMode();
}, "btn_stop");

function setLiveStopButton() {
	if (chart.control.isLiveModeRunning()) {
		webMI.gfx.setVisible("btn_live",false)
		webMI.gfx.setMoveX("btn_stop",0);
		webMI.gfx.setVisible("btn_stop",true)
	} else {
		webMI.gfx.setVisible("btn_live",true)
		webMI.gfx.setVisible("btn_stop",false)
		webMI.gfx.setMoveX("btn_stop",-30);
	}
}

function checkChart() {
	chart = webMI.trendFactory.getTrendByName(chartname);

	if (!chart) {
		setTimeout(function() {checkChart()}, 500);
		return;
	}

	setLiveStopButton();

	chartUpdate = chart.control.registerOnUpdatedCallback(function() {
		setLiveStopButton();
	});
}

webMI.addOnload(function() {
	checkChart();
});

webMI.addOnunload(function() {
	if (chart && chart.control) chart.control.unregisterOnUpdatedCallback(chartUpdate);
});
*/
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Marker buttons
webMI.trigger.connect("clicked", function(e) {
	var chart = webMI.trendFactory.getTrendByName(chartname);
	if (!chart.control.isMeasuringCursor1Visible())
		chart.control.showMeasuringCursor1();
	else
		chart.control.hideMeasuringCursor1();
}, "btn_marker1");

webMI.trigger.connect("clicked", function(e) {
	var chart = webMI.trendFactory.getTrendByName(chartname);
	if (!chart.control.isMeasuringCursor2Visible())
		chart.control.showMeasuringCursor2();
	else
		chart.control.hideMeasuringCursor2();
}, "btn_marker2");

//Options button
var conf = false;
var openConfig;
var display = webMI.getClientInfo() ? (webMI.getClientInfo().isDesktop ? "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.highcharts.opt_dialog" : "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.highcharts.opt_dialog_small") : "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.highcharts.opt_dialog";
webMI.trigger.connect("clicked", function(e) {
	if (webMI.query.optionsBtnMode == "trigger") {
		conf = !conf;
		webMI.trigger.fire(webMI.query.triggerName, conf);
	} else if (webMI.query.optionsBtnMode == "frame") {
		webMI.display.openDisplay(display, webMI.query, webMI.query.targetframe);
	} else {
		if (!openConfig || openConfig.closed)
			openConfig = webMI.display.openWindow({display: display,extern:false,height:600,menubar:false,modal:false,movable:true,resizable:true,scrollbars:false,status:false,title:" T{Chart Configuration}",toolbar:false,width:1200,query:webMI.query});
	}
}, "btn_options");
]]></script>
</svg>
