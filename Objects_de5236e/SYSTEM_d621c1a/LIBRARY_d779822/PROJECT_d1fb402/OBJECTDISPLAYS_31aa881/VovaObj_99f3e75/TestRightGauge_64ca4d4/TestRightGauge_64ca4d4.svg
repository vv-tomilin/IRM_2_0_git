<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="30.86" version="1.2" xmlns="http://www.w3.org/2000/svg" height="30.92" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:parameter valuetype="address" behavior="optional" desc="Момент " name="Moment" defaultvalue="AGENT.OBJECTS.SimulatedData.double_1"/>
  <atv:parameter valuetype="number" behavior="optional" desc="Максимум момента " name="MaxMoment" defaultvalue="10"/>
  <atv:parameter valuetype="address" behavior="optional" desc="Момент машключа 1" name="MomentMash1" defaultvalue="AGENT.OBJECTS.SimulatedData.double_2"/>
  <atv:parameter valuetype="address" behavior="optional" desc="Момент машключа 2" name="MomentMash2" defaultvalue="AGENT.OBJECTS.SimulatedData.double_3"/>
  <atv:parameter valuetype="address" behavior="optional" desc="Момент гидроключа" name="MomentGidr" defaultvalue="AGENT.OBJECTS.SimulatedData.double_4"/>
  <atv:parameter valuetype="number" behavior="optional" desc="Максимум момента машключа 1 " name="MaxMomentMash1" defaultvalue="10"/>
  <atv:parameter valuetype="number" behavior="optional" desc="Максимум момента машключа 2" name="MaxMomentMash2" defaultvalue="10"/>
  <atv:parameter valuetype="number" behavior="optional" desc="Максимум момента гидроключа " name="MaxMomentGidr" defaultvalue="10"/>
  <atv:parameter valuetype="number" behavior="optional" name="ChartWidth" defaultvalue="30"/>
  <atv:gridconfig width="20" height="20" gridstyle="lines" enabled="false"/>
  <atv:snapconfig width="10" height="10" enabled="false"/>
 </metadata>
 <foreignObject id="highchartsForeignObject" width="30.859" atv:bindbr="1,1" y="0" height="30.92" x="0" atv:bindtl="0,0">
  <div xmlns="http://www.w3.org/1999/xhtml" style="width:100%;height:100%">
   <div id="highchart_right" style="width:100%; height:100%;"/>
  </div>
 </foreignObject>
 <script type="text/ecmascript"><![CDATA[
var maxValue=[webMI.query["MaxMoment"],webMI.query["MaxMomentMash1"],webMI.query["MaxMomentMash2"],webMI.query["MaxMomentGidr"]]
console.log("ПередМассивом");
console.log(maxValue);
console.log(webMI.query["Moment"],webMI.query["MomentMash1"],webMI.query["MomentMash2"],webMI.query["MomentGidr"]);
var highchartConfig = {


    chart: {
   
		 backgroundColor:'transparent',
		margin: [0, 0, 0, 0],
		height:webMI.query["ChartWidth"],
		width: webMI.query["ChartWidth"],
        polar: true,
       	events:{
		load: webMI.data.subscribeBlock([
		webMI.query["Moment"],webMI.query["MomentMash1"],webMI.query["MomentMash2"],webMI.query["MomentGidr"]
		],[],function(e){
			
			var series = myChart.series;
			var LowerData= 92/maxValue[0]*e[0].value+8;
			var NearLowerData= 92/maxValue[1]*e[1].value+8;
			var NearUpperData= 92/maxValue[2]*e[2].value+8;
			var UpData= (92/maxValue[3])*e[3].value+8;
			console.log(LowerData,NearLowerData,NearUpperData,UpData);
			series[0].update({ data:[LowerData,NearLowerData,NearUpperData,UpData]});
			}
	)
	
	},
        
    },

    title:{
        text:''
    },
  
    pane: {
        startAngle: 180,
        endAngle: 360,
        innerSize:"60%"
    },

    exporting: { enabled: false },

    credits: {
        enabled: false
    },

    tooltip: { enabled: false },

    xAxis: {
	
        tickInterval: 45,
        min: 180,
        max: 360,
        visible: false
      
    },

    yAxis: {
        min: 0, 
        max: 100,
        visible: false
    },

    plotOptions: {
        series: {
			
            type:"column",
            pointStart: 0,
            pointInterval: 45,
            groupPadding: 0.02
        },
        column: {
            pointPadding: 0.09,
            groupPadding: 0,
            zones:[
            {   
                //цвет до 10 
                value: 11,
                color:  '#323d46' 
             },
			  {
				value:60,
				color:'#1691ff'
			 },
			 {
                value: 80,
                color: 'yellow'
                
			 },
			
            {
            value: 100,
                color:'red'
            }]
        }
    },
    legend: {
        enabled: false
    },
    series: [{
        type: 'column',
        data: [] ,
        enabled: false
    }],
    
    

   
};

webMI.addOnload(function(e) {
var id = "right";
var value = true;
return function(value) {
	var topWindow = parent;
	if (topWindow.Highcharts == undefined){
		webMI.data.loadScript("https://code.highcharts.com/highcharts.js",function(url, alreadyLoaded){
			webMI.data.loadScript("https://code.highcharts.com/highcharts-more.js",function(url, alreadyLoaded){
				webMI.data.loadScript("https://code.highcharts.com/modules/exporting.js",function(url, alreadyLoaded){
					webMI.data.loadScript("https://code.highcharts.com/modules/export-data.js",function(url, alreadyLoaded){
						webMI.data.loadScript("https://code.highcharts.com/modules/accessibility.js",function(url, alreadyLoaded){
					initChart();
						});	
					});	
				});		
			});	
		});	
	} else {
		initChart();
	}

	function initChart(){
		topWindow.Highcharts.setOptions({
			global: {
				useUTC: false
			}
		});

		var element = document.getElementById('highchart_right');
		myChart = topWindow.Highcharts.chart(element, highchartConfig);

	}
} (value);
});


]]></script>
</svg>
