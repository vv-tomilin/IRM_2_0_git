<?xml version="1.0" encoding="UTF-8"?>
<script>
  <parameter name="ua" type="uainput" trigger="false" relative="false" value=""/>
  <code><![CDATA[/* Parse all displays of a server and collect referenced variables. Returns the unused ones.
Input (members of ua):
	-node:uanodeid{mandatory} Specifies the nodeid of the server to search.
Output (return value)	:
	tablecolumnheaders:[string] Array of column titles
	tablecolumntypes:[uanodeid] Array of typedefinitions of column types
	tabledata:[[string]] Array of string array that represents the rows of the result
If no unused variables found empty arrays are returned.
*/
function toNodes2(result, x) { for (var i=0; i<result.length; ++i) x.push(result[i].node); }

var server = new UaNode(ua.node);
if (!server.exists()) throw new Error("Server:"+server.nodeid+" does not exist.");
var displays = [];
toNodes2(new UaNode(server.nodeaddr + ".DISPLAYS").browse({typedefinition:"VariableTypes.ATVISE.Display", recursive:true}), displays);
toNodes2(new UaNode("SYSTEM.DISPLAYS").browse({typedefinition:"VariableTypes.ATVISE.Display", recursive:true}), displays);

var strings = [];
var result = call("SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.CrossRef.Lib.DisplayVariables", {"ua":{node:displays, server:server, recursive:true}});
if (result && result.unused) for (var i = 0; i < result.unused.length; ++i)
	strings.push(result.unused[i].nodeaddr);

return {
	tablecolumnheaders:["Unused nodes"],
	tablecolumntypes:[new UaNode(UaNode.BASEVARIABLETYPE)],
	tabledata:[strings]
};]]></code>
</script>
