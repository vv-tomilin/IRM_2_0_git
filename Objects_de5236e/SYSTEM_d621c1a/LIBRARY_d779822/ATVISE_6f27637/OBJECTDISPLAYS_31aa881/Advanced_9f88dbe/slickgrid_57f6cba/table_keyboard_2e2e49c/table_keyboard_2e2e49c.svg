<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="20" xmlns:atv="http://webmi.atvise.com/2007/svgext" width="80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.2">
 <defs/>
 <desc>SVG Keybord addon for HTML based table</desc>
 <title>Table input</title>
 <metadata>
  <atv:parameter defaultvalue="atvise_table_1" valuetype="string" behavior="mandatory" desc="table ID" name="tableID"/>
  <atv:parameter defaultvalue="12" valuetype="number" behavior="optional" group="Appearance" desc="font size" name="font_size"/>
  <atv:parameter defaultvalue="SYSTEM.GLOBALS.atvSymbolColor" valuetype="global" behavior="optional" substitute="$COLOR$" group="Appearance" desc="font color" name="color"/>
  <atv:parameter defaultvalue="Arial" valuetype="enum" behavior="optional" group="Appearance" desc="font family" config="Arial;Courier;Tahoma;Verdana" name="font_family"/>
  <atv:parameter defaultvalue="true" valuetype="bool" behavior="optional" group="Options" desc="allow direct input" name="allowDirectInput"/>
  <atv:parameter defaultvalue="Advanced" valuetype="enum" behavior="optional" group="Options" desc="keyboard style" config="Advanced;Standard;Chrome;Steelblue" name="style"/>
  <atv:gridconfig enabled="true" width="5" height="5" gridstyle="lines"/>
  <atv:snapconfig enabled="true" width="1" height="1"/>
 </metadata>
	<rect stroke-linejoin="round" height="18" stroke-linecap="butt" y="1" width="78" atv:refpy="13" fill="#ffffff" atv:refpx="40" stroke-width="1" id="id_8" stroke="$COLOR$" x="1"/>
	<text font-family="Arial" y="17" atv:refpy="7.652" fill="$COLOR$" atv:refpx="47.98" font-size="12" id="id_9" transform="matrix(0.9545,0,0,0.7826,0.7497,0.2174)" x="20.477">T{Keyboard}</text>
	<circle cx="10" fill="none" atv:refpy="14.605" atv:refpx="12.189" cy="10" r="6.478" stroke-width="1.044" id="id_1" stroke="$COLOR$"/>
	<rect height="2.147" y="12" width="2.147" fill="$COLOR$" atv:refpy="16.76" atv:refpx="24.814" stroke-width="1.044" id="id_3" stroke="none" x="9"/>
	<rect height="6" y="5" width="2.147" fill="$COLOR$" atv:refpy="13.973" atv:refpx="24.814" stroke-width="1.044" id="id_4" stroke="none" x="9"/>
 <script type="text/ecmascript"><![CDATA[var tableID = webMI.query["tableID"];
var inputTypes = ['text', 'password', 'number'];
var tabHandler = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Tab Handler");
var style = webMI.query["style"];

webMI.addOnload(function () {
	webMI.table.loadResources(function () {
		webMI.table.waitReady(tableID, "ControllerConfig", function () {
			tableController = webMI.table.request(tableID, "controller");
			tableConfig = webMI.table.request(tableID, "ControllerConfig");

			webMI.rootWindow.document.getElementById(tableConfig.containerID).addEventListener("click", _evalInputs);

			function _evalInputs(e) {
				var type;
				try {
					var type = e.target.getAttribute('type').toLowerCase();
				} catch (ex) { /* not a valid type */
				}
				if (inputTypes.indexOf(type) < 0)
					return;
				switchToInputMode(e.target);
			}
		});
	});
});

function switchToInputMode(target) {
	var directKeyboardMode = webMI.query["allowDirectInput"] === "true";
	var useSVGKeyboard = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Configuration", {
		"action": "existsIndexParameter",
		"parameterName": "useSVGKeyboard"
	});
	if (useSVGKeyboard == "true")
		directKeyboardMode = false;

	if (!directKeyboardMode) {
		function getDisplayParameters() {
			var communicationID = new Date().getTime().toString();
			webMI.trigger.connect(communicationID, function (eKeybord) {

				if (typeof eKeybord.value != "undefined") {
					target.focus();
					target.value = eKeybord.value;
					target.blur();
				}

				var ev = parent.document.createEvent("HTMLEvents");
				ev.initEvent("keyup", false, true);
				target.dispatchEvent(ev);

			});

			var passObj = {};
			for (var i in webMI.query)
				passObj[i] = webMI.query[i];
			passObj["trigger"] = communicationID;
			passObj["value"] = target.value;
			return passObj;
		}

		var keyboard = null;
		var size = {w: 550, h: 250};
		
		if (style == "Standard")
			keyboard = "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Standard.keyboard.keyboard";
		else if (style == "Chrome")
			keyboard = "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Chrome.keyboard.keyboard";
		else if (style == "Steelblue")
			keyboard = "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Steelblue.keyboard.keyboard";
		else
			keyboard = "SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.keyboard.keyboard";

		var keyboardParam = getDisplayParameters();
		webMI.display.openWindow({
			display: keyboard,
			extern: false,
			height: size.h,
			menubar: false,
			modal: true,
			movable: true,
			resizable: false,
			scrollbars: false,
			status: false,
			title: "T{Keyboard}",
			toolbar: false,
			width: size.w,
			query: keyboardParam
		});
	}
}]]></script>
</svg>
