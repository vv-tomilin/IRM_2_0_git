<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg width="650" height="75" xmlns:atv="http://webmi.atvise.com/2007/svgext" version="1.2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <desc>Displays the last three alarms that occured.</desc>
 <title>Alarmlog three rows</title>
 <metadata>
  <atv:parameter name="fontFamily" config="Arial;Courier;Courier New;Verdana" valuetype="enum" group="Font" substitute="$FONTFAMILY$" defaultvalue="Arial" desc="family" behavior="optional"/>
  <atv:parameter name="fontSize" config="6;7;8;9;10;11;12;14;16;18;20;22;24;26;28;36;48;72" valuetype="enum" group="Font" substitute="$FONTSIZE$" defaultvalue="11" desc="size" behavior="optional"/>
  <atv:parameter name="fontColor" valuetype="global" group="Font" substitute="$FONTCOLOR$" defaultvalue="SYSTEM.GLOBALS.atvFontColor" desc="color" behavior="optional"/>
  <atv:parameter name="symbolColor" valuetype="global" group="Appearance" substitute="$SYMBOLCOLOR$" defaultvalue="SYSTEM.GLOBALS.atvSymbolColor" desc="symbol color" behavior="optional"/>
  <atv:parameter defaultvalue="0" behavior="optional" desc="min alarm priority" group="Alarm" valuetype="number" name="minAlarmPriority"/>
  <atv:parameter defaultvalue="0" behavior="optional" desc="max alarm priority" group="Alarm" valuetype="number" name="maxAlarmPriority"/>
  <atv:gridconfig width="20" gridstyle="lines" height="20" enabled="true"/>
  <atv:snapconfig width="10" height="10" enabled="false"/>
 </metadata>
 <text x="9.75" id="row1_date" font-size="$FONTSIZE$" y="60" atv:refpy="56.524" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="41.34">row1_date</text>
 <text x="79.75" id="row1_adr" font-size="$FONTSIZE$" y="60" atv:refpy="56.524" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="108.433">row1_adr</text>
 <text x="389.25" id="row1_msg" font-size="$FONTSIZE$" y="60" atv:refpy="56" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="417.248">row1_msg</text>
 <text x="389.25" id="row2_msg" font-size="$FONTSIZE$" y="40" atv:refpy="36" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="417.248">row2_msg</text>
 <text x="9.75" id="row2_date" font-size="$FONTSIZE$" y="40" atv:refpy="36.524" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="41.34">row2_date</text>
 <text x="79.75" id="row2_adr" font-size="$FONTSIZE$" y="40" atv:refpy="36.524" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="108.433">row2_adr</text>
 <text x="9.75" id="row3_date" font-size="$FONTSIZE$" y="20" atv:refpy="16.524" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="41.34">row3_date</text>
 <text x="389.25" id="row3_msg" font-size="$FONTSIZE$" y="20" atv:refpy="16" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="417.248">row3_msg</text>
 <text x="79.75" id="row3_adr" font-size="$FONTSIZE$" y="20" atv:refpy="16.524" font-family="$FONTFAMILY$" fill="$FONTCOLOR$" atv:refpx="108.433">row3_adr</text>
 <svg width="50" x="1609.831" id="row1_alarm1" y="120.196" atv:refpy="56.776" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm1" atv:refpx="639.266" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row1_alarm2" y="120.205" atv:refpy="56.775" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm2" atv:refpx="639.219" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row1_alarm3" y="120.205" atv:refpy="56.775" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm3" atv:refpx="639.219" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row2_alarm1" y="69.054" atv:refpy="36.776" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm1" atv:refpx="639.22" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row2_alarm2" y="69.054" atv:refpy="36.775" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm2" atv:refpx="639.219" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row2_alarm3" y="69.054" atv:refpy="36.775" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm3" atv:refpx="639.22" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row3_alarm1" y="17.903" atv:refpy="16.776" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm1" atv:refpx="639.22" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row3_alarm2" y="17.903" atv:refpy="16.774" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm2" atv:refpx="639.219" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <svg width="50" x="1609.831" id="row3_alarm3" y="17.903" atv:refpy="16.775" height="50" visibility="hidden" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Symbols.alarm3" atv:refpx="639.22" transform="matrix(0.391,0,0,0.391,0,0)">
  <atv:argument name="symbolColor" prefix="symbolColor" value=""/>
 </svg>
 <rect width="20.811" x="628.813" id="row3_alarm1_border" y="7.797" atv:refpy="16.783" height="17.972" fill="none" stroke="$SYMBOLCOLOR$" atv:refpx="639.219" stroke-width="1"/>
 <rect width="20.811" x="628.813" id="row2_alarm1_border" y="27.767" atv:refpy="36.753" height="17.972" fill="none" stroke="$SYMBOLCOLOR$" atv:refpx="639.218" stroke-width="1"/>
 <rect width="20.811" x="628.813" id="row1_alarm1_border" y="47.614" atv:refpy="56.6" height="17.972" fill="none" stroke="$SYMBOLCOLOR$" atv:refpx="639.218" stroke-width="1"/>
 <script type="text/ecmascript"><![CDATA[var alarmCount = 3;
var strLenEventText = 32;
var strLenAddress = 42;

var alarmlistItems = [];
var lng = "T{}";

var minAlarmPriority = webMI.query["minAlarmPriority"];
var maxAlarmPriority = webMI.query["maxAlarmPriority"];

Date.prototype.to24String = function(_withMS) {
	function _preNull(_nr) {
		return _nr < 10 ? "0" + _nr : _nr;
	}
	if (this.getTime() < (new Date()).getTime() - 24*60*60*1000)
		return this.getFullYear() + "-" + _preNull(this.getMonth()+1) + "-" + _preNull(this.getDate());
	_ret = _preNull(this.getHours()) + ":" + _preNull(this.getMinutes()) + ":" + _preNull(this.getSeconds());
	if (_withMS)
		_ret += "." + this.getMilliseconds();
	return _ret;
};

function cutString(str, maxLen, delimiter) {
	str = "" + str;
	maxLen = maxLen || 15;
	delimiter = "" + delimiter;

	if (str.length > maxLen) {
		var strLenPart = (maxLen - delimiter.length) / 2;
		var strLenPartBegin = Math.floor(strLenPart);
		var strLenPartEnd = Math.ceil(strLenPart);

		str = (str.substr(0, strLenPartBegin)) + delimiter + (str.substr(str.length - strLenPartEnd));
	}

	return str;
}

webMI.addOnload(function() {
    webMI.rootWindow.webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Alarmmanagement", {"id": ""});
	for (var i=0; i<alarmCount; i++) {
		setEmpty(i);
	}
	webMI.trigger.fire("com.atvise.alarms_items", function(alarms){
		for (var alarm in alarms){
			var isAlarmNoLimits = (minAlarmPriority == 0 && minAlarmPriority == maxAlarmPriority);
			var isAlarmInLimits = (minAlarmPriority < alarms[alarm].item.priority && alarms[alarm].item.priority < maxAlarmPriority);
			if(isAlarmNoLimits || isAlarmInLimits){
				setItem(alarms[alarm].item);
			}
		}
	});
	webMI.trigger.connect("com.atvise.alarms_notify_item", function(notify) {
	    var e = JSON.parse(JSON.stringify(notify));
		if (e.value == false) {
			alarmlistItems = [];
			for (var i=0; i<alarmCount; i++)
				setEmpty(i);
		} else {
			var isAlarmNoLimits = (minAlarmPriority == 0 && minAlarmPriority == maxAlarmPriority);
			var isAlarmInLimits = (minAlarmPriority < e.value.priority && e.value.priority < maxAlarmPriority);
			if(isAlarmNoLimits || isAlarmInLimits){
				setItem(e.value);
			}
		}
	});
});

function setEmpty(row) {
	webMI.gfx.setText("row"+(row+1) + "_date", "");
	webMI.gfx.setText("row"+(row+1) + "_msg", "");
	webMI.gfx.setText("row"+(row+1) + "_adr", "");
	webMI.gfx.setVisible("row"+(row+1)+"_alarm1_border", false);
	var states = [1,2,3];
	for (var i=0; i<states.length; i++)
		webMI.gfx.setVisible("row"+(row+1)+"_alarm"+(i+1), false);
}

function formatString(obj, attribute){
	var text = typeof obj[attribute] === "string" ? obj[attribute] : obj[attribute]["T{}"];
	try {
		return webMI.sprintf(text, obj, "T{}");
	} catch (err) {
		console.error(attribute+": " + text + "\n error: " + err);
		return "";
	}
}

// use buffer for rendering
var buffer = [];
var render = setInterval(renderLog, 250);

webMI.addOnunload(function() {
	clearInterval(render);
	render = null;
});

function renderLog(){
	var itm;
	for(var i=0; i<alarmCount; i++)
		if(itm = buffer.pop()) {
			showItem(itm);
		}
	buffer = [];
}

webMI.addOnunload(function() {
	clearInterval(render);
	render = null;
});

function setItem(itm){
	itm.state = itm.state ? itm.state : "-1";
	itm.timestamp = itm.timestamp ? itm.timestamp : "";
	itm.address = itm.address ? itm.address : "";
	itm.eventtext = itm.eventtext ? itm.eventtext : "";
	buffer.push(itm);
}

function showItem(itm) {
	itm.state = itm.state ? itm.state : "-1";
	itm.timestamp = itm.timestamp ? itm.timestamp : "";
	itm.address = itm.address ? itm.address : "";
	itm.eventtext = itm.eventtext ? itm.eventtext : "";

	if (itm.retain == false) return;

	for (var i = 0; i < alarmlistItems.length; i++) {
		if (alarmlistItems[i].address == itm.address && alarmlistItems[i].timestamp == itm.timestamp && alarmlistItems[i].state == itm.state) //unique alarm identifier
			return;
	}

	if (itm.address != "") {
		alarmlistItems.push(itm);
		alarmlistItems.sort(function(a,b) { return a.timestamp - b.timestamp; });
		alarmlistItems = alarmlistItems.slice((-1) * alarmCount);
		alarmlistItems.sort(function(a,b) { return b.timestamp - a.timestamp; });
	}

	for (var i=0; i<alarmCount; i++) {
		if (alarmlistItems[i] != undefined) {
			setAlarm("row"+(i+1), alarmlistItems[i]);
		} else {
			setEmpty(i);
		}
	}

	function setAlarm(row, item) {
		if (item != undefined) {
			var date = (new Date(item.timestamp)).to24String();
			var eventtext = (item.eventtext ? formatString(item, "eventtext") : "");
			webMI.gfx.setText(row + "_date", date);
			webMI.gfx.setText(row + "_msg", eventtext ? cutString(eventtext, strLenEventText, "..") : "");
			var dataItemAdress = item.address;
			var replacedAdress = dataItemAdress.replace(/AGENT.OBJECTS./g,"");
			webMI.gfx.setText(row + "_adr", cutString(replacedAdress, strLenAddress, ".."));
			var state = item.state < 3 ? item.state : 3;
			toggleSymbol(row, state);
		} else {
			toggleSymbol(row, -1);
		}
	}

	function toggleSymbol(row, state) {
		var states = [1,2,3];
		for (var i=0; i<states.length; i++) {
			var visible = (state == states[i] ? "inherit" : false);
			webMI.gfx.setVisible(row + "_alarm"+(i+1), visible);
			var active = (state == 1);
			if (active) {
				webMI.gfx.setVisible(row + "_alarm"+(i+1)+"_border", "inherit");
			} else {
				webMI.gfx.setVisible(row + "_alarm"+(i+1)+"_border", false);
			}
		}
	}
}

]]></script>
</svg>
