<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg version="1.2" xmlns:atv="http://webmi.atvise.com/2007/svgext" width="287" height="102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <desc>Sets/displays date and time.</desc>
 <title>In/Out Date-Time</title>
 <metadata>
  <atv:parameter behavior="mandatory" desc="base" valuetype="address" name="base"/>
  <atv:parameter config="dd.mm.yyyy;mm.dd.yyyy" defaultvalue="dd.mm.yyyy" behavior="optional" desc="format" valuetype="enum" name="format"/>
  <atv:parameter defaultvalue="150" behavior="optional" desc="interval [ms] (0 = off)" valuetype="number" name="interval"/>
  <atv:parameter config="Times New Roman=Times New Roman,Bodoni,Garamond,Minion Web,ITC Stone Serif,MS Georgia,Bitstream Cyberbit,serif;Arial=MS Trebuchet,ITC Avant Garde Gothic,MS Arial,MS Verdana,Univers,Futura,ITC Stone Sans,Gill Sans,Akzidenz Grotesk,Helvetica,sans-serif;Courier=Courier,MS Courier New,Prestige,Everson Mono,monospace;Zapf-Chancery=Caflisch Script,Adobe Poetica,Sanvito,Ex Ponto,Snell Roundhand,Zapf-Chancery,cursive;Alpha Geometrique=Alpha Geometrique,Critter,Cottonwood,FB Reactor,Studz,fantasy" defaultvalue="Arial" behavior="optional" desc="family" group="Font" valuetype="enum" name="fontFamily"/>
  <atv:parameter config="6;7;8;9;10;11;12;14;16;18" defaultvalue="12" behavior="optional" desc="size" group="Font" valuetype="enum" name="fontSize"/>
  <atv:parameter defaultvalue="#ffffff" behavior="optional" desc="value field fill color" group="Appearance" valuetype="color" name="valueFieldFill"/>
  <atv:parameter defaultvalue="SYSTEM.GLOBALS.atvInactiveColor" behavior="optional" desc="value field fill color inactive" group="Appearance" valuetype="global" name="fillColorInactive"/>
  <!-- <atv:parameter defaultvalue="#d0d0d0" behavior="optional" desc="fill color arrow" group="Appearance" valuetype="color" name="arrowFill"/>
  <atv:parameter defaultvalue="#FDFF0F" behavior="optional" desc="fill color arrow pressed" group="Appearance" valuetype="color" name="arrowFillPressed"/> -->
  <atv:parameter defaultvalue="#ffffff" behavior="optional" desc="stroke color button pressed" group="Appearance" valuetype="color" name="buttonStrokePressed"/>
  <atv:parameter defaultvalue="#FFFFFF" behavior="optional" desc="focus stroke color" group="Appearance" valuetype="color" name="focusStrokeColor"/>
  <atv:parameter behavior="optional" desc="minimum date" group="Options" valuetype="string" name="minDate"/>
  <atv:parameter behavior="optional" desc="maximum date" group="Options" valuetype="string" name="maxDate"/>
  <atv:parameter behavior="optional" desc="minimum time" group="Options" valuetype="string" name="minTime"/>
  <atv:parameter behavior="optional" desc="maximum time" group="Options" valuetype="string" name="maxTime"/>
  <atv:parameter behavior="optional" desc="address to set" group="Options" valuetype="address" name="outputNode"/>
  <atv:parameter behavior="optional" desc="consistency group" group="Options" valuetype="string" name="consistencyGroup"/>
  <atv:parameter behavior="optional" desc="tab index" group="Options" valuetype="number" name="tabIndex"/>
  <atv:parameter behavior="optional" desc="tooltip" group="Options" valuetype="trstring" name="tooltip"/>
  <atv:parameter config="SYSTEM.SECURITY.RIGHTS" behavior="optional" desc="necessary right" group="Security" valuetype="address" name="right"/>
  <atv:parameter behavior="optional" desc="activation address" group="Security" valuetype="address" name="activeNode"/>
  <atv:parameter behavior="optional" desc="activation value" group="Security" valuetype="string" name="activeValue"/>
  <atv:gridconfig width="20" enabled="false" height="20" gridstyle="lines"/>
  <atv:snapconfig width="10" enabled="false" height="10"/>
 </metadata>
 <rect id="id_2" ry="1.5" width="286.5" stroke="none" fill="#ffffff" atv:refpy="50" height="101.5" stroke-width="0.5" atv:refpx="81" y="0.25" x="0.25" rx="1.5" atv:dynamic="true"/>
 <svg id="date" width="122" atv:refpy="50" height="100" atv:refpx="62" y="1" x="1" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.in_out_date">
  <atv:argument prefix="interval" value="" name="interval"/>
  <atv:argument value="" name="arrowFill"/>
  <atv:argument prefix="arrowFillPressed" value="" name="arrowFillPressed"/>
  <atv:argument prefix="buttonStrokePressed" value="" name="buttonStrokePressed"/>
  <atv:argument prefix="right" value="" name="right"/>
  <atv:argument prefix="activeNode" value="" name="activeNode"/>
  <atv:argument prefix="activeValue" value="" name="activeValue"/>
  <atv:argument prefix="fillColorInactive" value="" name="fillColorInactive"/>
  <atv:argument prefix="fontSize" value="" name="fontSize"/>
  <atv:argument prefix="outputNode" value="" name="outputNode"/>
  <atv:argument prefix="format" value="" name="format"/>
  <atv:argument prefix="minDate" value="" name="min"/>
  <atv:argument prefix="maxDate" value="" name="max"/>
  <atv:argument prefix="tabIndex" value="" name="tabIndex"/>
  <atv:argument prefix="focusStrokeColor" value="" name="focusStrokeColor"/>
  <atv:argument prefix="tooltip" value="" name="tooltip"/>
  <atv:argument prefix="valueFieldFill" value="" name="valueFieldFill"/>
 </svg>
 <svg id="time" width="162" atv:refpy="51" height="100" atv:refpx="205" y="1" x="124" xlink:href="SYSTEM.LIBRARY.ATVISE.OBJECTDISPLAYS.Advanced.in_out_time">
  <atv:argument prefix="interval" value="" name="interval"/>
  <atv:argument value="" name="arrowFill"/>
  <atv:argument prefix="arrowFillPressed" value="" name="arrowFillPressed"/>
  <atv:argument prefix="buttonStrokePressed" value="" name="buttonStrokePressed"/>
  <atv:argument prefix="right" value="" name="right"/>
  <atv:argument prefix="activeNode" value="" name="activeNode"/>
  <atv:argument prefix="activeValue" value="" name="activeValue"/>
  <atv:argument prefix="valueFieldFill" value="" name="valueFieldFill"/>
  <atv:argument prefix="fillColorInactive" value="" name="fillColorInactive"/>
  <atv:argument prefix="fontFamily" value="" name="fontFamily"/>
  <atv:argument prefix="fontSize" value="" name="fontSize"/>
  <atv:argument prefix="outputNode" value="" name="outputNode"/>
  <atv:argument prefix="minTime" value="" name="min"/>
  <atv:argument prefix="maxTime" value="" name="max"/>
  <atv:argument prefix="fillColorInactive" value="" name="fillColorInactive"/>
  <atv:argument prefix="tabIndex" value="" name="tabIndex"/>
  <atv:argument prefix="focusStrokeColor" value="" name="focusStrokeColor"/>
  <atv:argument prefix="tooltip" value="" name="tooltip"/>
 </svg>
 <script type="text/ecmascript"><![CDATA[//connect to valuechanged-triggers
webMI.trigger.connect("valuechanged", function(e) { 
		setDate(e.value); 
		webMI.trigger.fire("updateDate", _value, "time"); 
		valueUpdated(true); }, "date");
webMI.trigger.connect("valuechanged", function(e) { 
		setDate(e.value); 
		webMI.trigger.fire("updateTime", _value, "date"); 
		valueUpdated(true); }, "time");

//connect to setValue-trigger
webMI.trigger.connect("setValue", function(e) {
	update(e.value);
});

//parameters
var base = (webMI.query["base"] == undefined) ? "" : webMI.query["base"];
var outputNode = webMI.query["outputNode"];
var consistencyGroup = webMI.query["consistencyGroup"];

//variables
var _value = new Date().getTime();

if (consistencyGroup)
	var consistencyHandler = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Consistency Handler");

//subscribe to node
if (base != "") {
	if (consistencyGroup) {
		consistencyHandler.register(consistencyGroup, base, update);
	} else {
		webMI.data.subscribe(base, function(e) {
			setDate(e.value);
			updateDisplay();
		});
	}
//no base defined
} else {
	//display initial value
	updateDisplay();
}

/*
 * FUNCTIONS
 */

//update display
function updateDisplay() {
	webMI.trigger.fire("setValue", _value, "date");
	webMI.trigger.fire("setValue", _value, "time");
}

//set date
function setDate(date) {
	_value = date;
}

//value has been changed by display
function valueUpdated(fireTrigger) {
	//update node
	if (base != "" && !consistencyGroup) {
		webMI.data.write(base, _value);
	}

	if (outputNode) {
		webMI.data.write(outputNode, _value);
	}
	
	//fire trigger
	if (fireTrigger) {
		webMI.trigger.fire("valuechanged", _value, "");
	}

	//update consistency value
	if (consistencyGroup)
		consistencyHandler.set(consistencyGroup, base, _value);
}

//update externally by trigger or consistency handler
function update(value) {
	setDate(value);
	//valueUpdated(false);

	//update displayed values only
	if ((base == "") || (base == undefined) || consistencyGroup) {
		updateDisplay();
	}
}]]></script>
</svg>
