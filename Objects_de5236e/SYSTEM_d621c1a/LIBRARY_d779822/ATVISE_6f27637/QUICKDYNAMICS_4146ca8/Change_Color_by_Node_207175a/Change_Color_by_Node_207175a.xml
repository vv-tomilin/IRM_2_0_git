<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
	<icon type="image/png">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</icon>
	<visible>1</visible>
	<title>Change Color by Node</title>
	<description>Changes the color of an element by a node value.</description>
  </metadata>
  <parameter name="nodeId" description="node triggering the change" valuetype="address" defaultvalue="" config="" behavior="optional" group=""/>
  <parameter name="minRange" description="min of range" valuetype="number" defaultvalue="0" config="" behavior="optional" group=""/>
  <parameter name="maxRange" description="max of range" valuetype="number" defaultvalue="" config="" behavior="optional" group=""/>
  <parameter name="fillInRange" description="fill color when inside range" valuetype="color" defaultvalue="#00ff00" config="" behavior="optional" group=""/>
  <parameter name="strokeInRange" description="stroke color when inside range" valuetype="color" defaultvalue="#000000" config="" behavior="optional" group=""/>
  <parameter name="fillOutOfRange" description="fill color when outside range" valuetype="color" defaultvalue="#ff0000" config="" behavior="optional" group=""/>
  <parameter name="strokeOutOfRange" description="stroke color when outside range" valuetype="color" defaultvalue="#000000" config="" behavior="optional" group=""/>
  <code><![CDATA[// This Quick Dynamics changes the color and stroke of the applied graphical element depending whether or not the value of the node is within the defined range.
// Parameters:
//	nodeId:			this node (value within or out of the defined range) triggers this Quick Dynamic
//	minRange:		lower bound of the range where the node's value should lie in
//	maxRange:		upper bound of the range where the node's value should lie in; if not specified it will be set to "minRange", i.e. the quick dynamic will be triggered at a
//					discrete value (minRange=maxRange=value) only and not for a range
//	fillInRange:	this fill color of the graphical element will be set when value of the node is within the defined range
//	strokeInRange:	this stroke color of the graphical element will be set when value of the node is within the defined range
//	fillOutRange:	this fill color of the graphical element will be set when value of the node is out of the defined range
//	strokeOutRange:	this stroke color of the graphical element will be set when value of the node is out of the defined range
var AggregateManager = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Aggregate Manager");
webMI.addOnunload(function unloadAggregateManager() {
	AggregateManager.destroy();
	AggregateManager = null;
});

AggregateManager.subscribeNodeOrAggregate(base.nodeId, handleResult);

function handleResult(e) {
	var value = e.value;

	if (String(base.maxRange) == "") {
		var maxRange=base.minRange; // If no maxRange is specified, the color will only be changed at a discrete value (value = minRange = maxRange)
	} else {
		var maxRange = parseFloat(base.maxRange);
	}
	if (value >= base.minRange && value <= maxRange) {
		webMI.gfx.setFill(base.id, base.fillInRange);
		webMI.gfx.setStroke(base.id, base.strokeInRange);
	}
	else {
		webMI.gfx.setFill(base.id, base.fillOutOfRange);
		webMI.gfx.setStroke(base.id, base.strokeOutOfRange);
	}
}
]]></code>
</script>
