<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
    <icon type="image/png"></icon>
    <visible>0</visible>
    <title>Set Slider Vertical</title>
    <description>For internal usage only</description>
  </metadata>
  <code><![CDATA[var finger = -1;
var min = parseInt(base.min);
var max = parseInt(base.max);
var curValue;
var baseValue;
var MouseMove = false;
var ResetValue = false;
var h = parseInt(webMI.gfx.getHeight(base.id));
var AggregateManager = webMI.callExtension("SYSTEM.LIBRARY.ATVISE.QUICKDYNAMICS.Aggregate Manager");
webMI.addOnunload(function unloadAggregateManager() {
	AggregateManager.destroy();
	AggregateManager = null;
});

function getPosition(event) {
	if (event.changedTouches) {
		if (event.type == "touchstart" && finger == -1) /* on touchstart */
			finger = event.changedTouches[0].identifier;
		else if (finger != event.changedTouches[0].identifier) /* move or touchend */
			return {
				x: -1
			};

		return webMI.gfx.createPoint(event.changedTouches[0].clientX, event.changedTouches[0].clientY)
	} else
		return webMI.gfx.createPoint(event.clientX, event.clientY);
}

AggregateManager.subscribeNodeOrAggregate(base.nodeId, handleResult);

function handleResult(e) {
	if (!MouseMove) {
		baseValue = e.value;
		webMI.gfx.setMoveY("slider_pointer", webMI.translate((baseValue), min, max, 0, -h));
	}
}

webMI.addEvent(base.id, ["mousedown", "touchstart"], function(e) {
	if (webMI.gfx.getX("activeIndicator") == "1") mouseDownEvent(e);
});

webMI.addEvent("slider_pointer", ["mousedown", "touchstart"], function(e) {
	if (webMI.gfx.getX("activeIndicator") == "1") mouseDownEvent(e);
});

function mouseDownEvent(e) {
	e.preventDefault();
	var p = getPosition(e);
	if (p.x != -1) {
		MouseMove = true;
		ResetValue = false;
		p = p.matrixTransform(webMI.gfx.getScreenCTM().inverse());
		var stepWidthSlider = (max - min)/webMI.gfx.getHeight(base.id);
		var posSlider = (p.y - webMI.gfx.getY(base.id));
		curValue = max - (posSlider * stepWidthSlider);
	}
}

webMI.addEvent(document, ["mousemove", "touchmove"], function(e) {
	if (webMI.gfx.getX("activeIndicator") == "1") {
		var bcr = base.ele.getBoundingClientRect();
		var p = getPosition(e);
		if (MouseMove && p.x != -1 && p.y >= bcr.top && p.y <= bcr.bottom && p.x >= bcr.left && p.x <= bcr.right) {
			e.preventDefault();
			ResetValue = false;
			p = p.matrixTransform(webMI.gfx.getScreenCTM().inverse());
			var stepWidthSlider = (max - min)/webMI.gfx.getHeight(base.id);
			var posSlider = (p.y - webMI.gfx.getY(base.id));
			// At bottom step round down
			if (posSlider < 1) posSlider = 0;
			// At top step round up
			if (posSlider > webMI.gfx.getHeight(base.id) - 1) posSlider = webMI.gfx.getHeight(base.id);
			curValue = max - (posSlider * stepWidthSlider); 
			webMI.gfx.setMoveY("slider_pointer", webMI.translate((curValue), min, max, 0, -h));
			try {
				webMI.gfx.setScaleY("bar", webMI.translate(curValue, min, max, 0, 1));
			} catch (e) {}
			var formatString = "%0." + base.decimalPositions + "f";
			curValue = webMI.sprintf(formatString, curValue);
			webMI.gfx.setText("slider_value", curValue);
		}
	}
	return false;
});

webMI.addEvent(document, ["mouseup", "touchend"], function(e) {
	if (webMI.gfx.getX("activeIndicator") == "1") {
		var p = getPosition(e);
		if (MouseMove && p.x != -1) {
			e.preventDefault();
			MouseMove = false;
			finger = -1;
			if (ResetValue) {
				webMI.data.write(base.node, baseValue);
			} else {
				var bcr = base.ele.getBoundingClientRect();
				if (p.y >= bcr.bottom) curValue = min;
				if (p.y <= bcr.top) curValue = max;
				webMI.data.write(base.node, curValue);
			}
		}
	}
	return false;
});]]></code>
</script>
